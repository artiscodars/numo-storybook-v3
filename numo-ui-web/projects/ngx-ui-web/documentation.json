{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-5d353b8c1d225e09f14cb588106aea8057b34b050c75354fa9039782cec86bb235c040a5681e1ccc2d9cd6b27bf3ff534657d9fb26f88fec737b061184ac3489",
            "file": "projects/ngx-ui-web/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "TesterService",
            "id": "injectable-TesterService-c6253e433e6a3dd228e0902725bdf7363983c63e5501d209779b83aab2caee6041f4288201cd10797213295e5e688c56ef2131b4c50e4d808f9a7b439d715ce5",
            "file": "projects/ngx-ui-web/src/lib/tester.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "tellMeSomething",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TesterService {\n    tellMeSomething(): string {\n        return \"Something\";\n    }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-856d87edcd452fb0f7aa484d642bb6e8ebaa0fe07858a4065a58813d9f6799d8d7f2ca25fb16ca39eeff66a753d9aefb220d2c06e867c418e25885ca7b4d8e31",
            "file": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        "
            ],
            "templateUrl": [
                "./home.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "items",
                    "defaultValue": "[{ label: \"UZDEVUMI\", menu: [...Menu] }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { HeaderComponent } from \"../../components/header/header.component\";\nimport { DashboardComponent } from \"../dashboard/dashboard.component\";\nimport { Menu } from \"../../components/left-menu/menu.model\";\nimport { CardModule } from \"primeng/card\";\nimport { CommonModule } from \"@angular/common\";\nimport { LeftMenuComponent } from \"../../components/left-menu/left-menu.component\";\n\n@Component({\n    // selector: \"numo-home\",\n    standalone: true,\n    imports: [\n        RouterOutlet,\n        HeaderComponent,\n        DashboardComponent,\n        CardModule,\n        CommonModule,\n        LeftMenuComponent,\n    ],\n    templateUrl: \"./home.template.html\",\n    styles: [\n        `\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        `,\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppComponent {\n    isMenuVisible = false;\n    title = \"angular-latest\";\n    items = [{ label: \"UZDEVUMI\", menu: [...Menu] }];\n\n    toggleMenu(isMenuVisible: boolean) {\n        this.isMenuVisible = isMenuVisible;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        \n",
            "extends": [],
            "templateData": "<numo-header></numo-header>\n\n<numo-dashboard></numo-dashboard>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b2adde70013dc0a7761556b6e8e46c54c2947d11493789b70a384a74833b96a5cdd547d807833837359437d51e2993e2d0f121101106a431ad82a4fd698f266e-1",
            "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplaning.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./timeplaning.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadCrumbItems",
                    "defaultValue": "[\n        { label: \"Darba laika plānošana\", route: \"/timeplaning\" },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "expandedRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "home",
                    "defaultValue": "{ icon: \"pi pi-home\", route: \"/\" }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "items",
                    "defaultValue": "[{ label: \"UZDEVUMI\", menu: [...Menu] }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "itemsWithIsLast",
                    "defaultValue": "this.breadCrumbItems.map((item, index, array) => ({\n        ...item,\n        isLast: index === array.length - 1,\n    }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MenuItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "options",
                    "defaultValue": "[\n        {\n            name: \"Barona ielas veikals\",\n        },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "Products",
                    "defaultValue": "Products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "tableData",
                    "defaultValue": "TableData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "tableData2",
                    "defaultValue": "TableData2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [
                {
                    "name": "isRowExpanded",
                    "args": [
                        {
                            "name": "product",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleRow",
                    "args": [
                        {
                            "name": "product",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                },
                {
                    "name": "BreadcrumbModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "DropdownModule",
                    "type": "module"
                },
                {
                    "name": "CalendarModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "TabViewModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "TableModule",
                    "type": "module"
                },
                {
                    "name": "BadgeModule",
                    "type": "module"
                },
                {
                    "name": "InputGroupModule",
                    "type": "module"
                },
                {
                    "name": "InputGroupAddonModule",
                    "type": "module"
                },
                {
                    "name": "ChipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { HeaderComponent } from \"../../components/header/header.component\";\nimport { DashboardComponent } from \"../dashboard/dashboard.component\";\nimport { Menu } from \"../../components/left-menu/menu.model\";\nimport { CardModule } from \"primeng/card\";\nimport { CommonModule } from \"@angular/common\";\nimport { LeftMenuComponent } from \"../../components/left-menu/left-menu.component\";\nimport { BreadcrumbModule } from \"primeng/breadcrumb\";\nimport { IconComponent } from \"../../components/icon/icon.component\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { MenuModule } from \"primeng/menu\";\nimport { ButtonModule } from \"primeng/button\";\nimport { BadgeModule } from \"primeng/badge\";\nimport { MenuItem, TableData, TableData2, Products } from \"./timeplanning.data\";\nimport { TableModule } from \"primeng/table\";\nimport { InputGroupModule } from \"primeng/inputgroup\";\nimport { InputGroupAddonModule } from \"primeng/inputgroupaddon\";\nimport { ChipModule } from \"primeng/chip\";\n\n@Component({\n    // selector: \"numo-timeplaning\",\n    standalone: true,\n    imports: [\n        RouterOutlet,\n        HeaderComponent,\n        DashboardComponent,\n        CardModule,\n        CommonModule,\n        LeftMenuComponent,\n        BreadcrumbModule,\n        IconComponent,\n        DropdownModule,\n        CalendarModule,\n        IconComponent,\n        TabViewModule,\n        MenuModule,\n        ButtonModule,\n        TableModule,\n        BadgeModule,\n        InputGroupModule,\n        InputGroupAddonModule,\n        ChipModule,\n    ],\n    templateUrl: \"./timeplaning.template.html\",\n\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppComponent {\n    isMenuVisible = false;\n    title = \"angular-latest\";\n    expandedRows: any[] = [];\n    items = [{ label: \"UZDEVUMI\", menu: [...Menu] }];\n    home = { icon: \"pi pi-home\", route: \"/\" };\n    date: Date[] | undefined;\n    tableData = TableData;\n    tableData2 = TableData2;\n    Products = Products;\n    menuItems = MenuItem;\n\n    // Method to toggle row expansion\n    toggleRow(product: any) {\n        const index = this.expandedRows.indexOf(product.id);\n        if (index !== -1) {\n            // Row is already expanded, so collapse it\n            this.expandedRows.splice(index, 1);\n        } else {\n            // Row is not expanded, so expand it\n            this.expandedRows.push(product.id);\n        }\n    }\n\n    // Method to check if a row is expanded\n    isRowExpanded(product: any): boolean {\n        return this.expandedRows.includes(product.id);\n    }\n    options = [\n        {\n            name: \"Barona ielas veikals\",\n        },\n    ];\n    breadCrumbItems = [\n        { label: \"Darba laika plānošana\", route: \"/timeplaning\" },\n    ];\n\n    itemsWithIsLast = this.breadCrumbItems.map((item, index, array) => ({\n        ...item,\n        isLast: index === array.length - 1,\n    }));\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<numo-header></numo-header>\n\n<div class=\"container gap-3 w-full\">\n\n    <div class=\"flex-grow-1\">\n        <div class=\"w-full mb-2\">\n            <p-breadcrumb class=\"max-w-full\" [model]=\"itemsWithIsLast\" [home]=\"home\">\n                <ng-template pTemplate=\"item\" let-item>\n                    <ng-container *ngIf=\"!item.isLast; else lastBreadcrumb\">\n                        <!-- For all items except the last one -->\n                        <ng-container *ngIf=\"item.route; else urlItem\">\n                            <!-- If the item has a route -->\n                            <a [routerLink]=\"item.route\" class=\"p-menuitem-link underline\">\n                                <span [ngClass]=\"[item.icon ? item.icon : '', 'text-color']\"></span>\n                                <span class=\"text-primary\">{{ item.label }}</span>\n                            </a>\n                        </ng-container>\n                        <ng-template #urlItem>\n                            <!-- If the item has a URL -->\n                            <a [href]=\"item.url\" class=\"p-menuitem-link\">\n                                <span [ngClass]=\"[item.icon ? item.icon : '', 'text-color']\"></span>\n                                <span class=\"text-primary\">{{ item.label }}</span>\n                            </a>\n                        </ng-template>\n                    </ng-container>\n                    <ng-template #lastBreadcrumb>\n                        <!-- For the last item, render as plain text -->\n                        <span class=\"text-color\">{{ item.label }}</span>\n                    </ng-template>\n                </ng-template>\n            </p-breadcrumb>\n        </div>\n\n\n        <div\n            class=\"card flex flex-column md:flex-row bg-white p-3 mb-4 gap-3 border-round-sm border border-1 border-gray-200 flex justify-content-start\">\n            <div class=\"flex flex-column mr-3\">\n                <label for=\"dropdown\" class=\"mb-1 label text-sm\">Struktūrvienība</label>\n                <p-dropdown id=\"dropdown\" [options]=\"options\" optionLabel=\"name\" placeholder=\"Barona ielas veikals\" />\n            </div>\n            <div class=\"flex flex-column\">\n                <label for=\"calendar\" class=\"mb-1 label text-sm\">Mēnesis</label>\n                <div class=\"flex align-items-center\">\n\n                    <p-calendar id=\"calendar\" [(ngModel)]=\"date\" view=\"month\" [iconDisplay]=\"'input'\" [showIcon]=\"true\"\n                        dateFormat=\"MM, yy\" [readonlyInput]=\"true\" />\n\n                </div>\n            </div>\n        </div>\n        <p-tabView class=\"mt-5 numo-transparent-bg\">\n            <p-tabPanel header=\"Uzstādījumi\">\n\n                <div class=\" flex gap-3 flex-column md:flex-row\">\n                    <p-menu [model]=\"menuItems\" />\n\n                    <div class=\"flex-1\">\n                        <p-button label=\"Pievienot\" icon=\"pi pi-plus\" class=\"plus-button\" size=\"small\" />\n\n                        <div class=\"pt-3\">\n\n\n                            <p-table [value]=\"Products\" dataKey=\"id\" class=\"data-table\">\n\n                                <!-- Body Template for Product Rows -->\n                                <ng-template pTemplate=\"body\" let-product>\n                                    <tr>\n                                        <!-- Caret Icon for Expand/Collapse -->\n\n                                        <td>\n                                            <div class=\"flex flex-wrap  gap-2\">\n\n\n\n                                                <button\n                                                    class=\"p-button p-button-lg p-1 p-button-text p-button-secondary text-gray-800\"\n                                                    (click)=\"toggleRow(product)\">\n                                                    <span class=\"material-symbols-rounded text-3xl\">\n                                                        {{ isRowExpanded(product) ? 'expand_more' : 'chevron_right' }}\n                                                    </span>\n                                                </button>\n\n\n                                                <span\n                                                    class=\"flex align-items-center justify-content-center font-semibold white-space-nowrap\">{{product.name}}</span>\n                                                <p-badge [value]=\"product.badgeName\" [severity]=\"product.badgeSeverity\"\n                                                    class=\"flex align-items-center justify-content-center \"\n                                                    styleClass=\"text-xs font-normal\"></p-badge>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div class=\"flex flex-wrap gap-2\">\n\n\n\n\n                                                <div class=\"p-buttonset daycalendar\">\n                                                    <p-button\n                                                        *ngFor=\"let day of ['M', 'T', 'W', 'T', 'F', 'S', 'S']; let i = index\"\n                                                        type=\"button\" [label]=\"day\" size=\"small\" severity=\"secondary\"\n                                                        [outlined]=\"!product.days.includes(i + 1)\">\n                                                    </p-button>\n                                                </div>\n\n                                                <div *ngFor=\"let date of product.dates\" class=\"p-buttonset daycalendar\">\n                                                    <p-button type=\"button\" [outlined]=\"true\" [label]=\"date\"\n                                                        size=\"small\"></p-button>\n                                                    <p-button icon=\"pi pi-times\" size=\"small\" severity=\"secondary\"\n                                                        styleClass=\"w-3\"></p-button>\n                                                </div>\n\n\n\n\n                                            </div>\n                                        </td>\n                                        <td>\n\n                                            <div class=\"flex flex-wrap gap-2\">\n                                                <p-chip *ngFor=\"let slot of product.slots\" [label]=\"slot\"\n                                                    styleClass=\"white-space-nowrap text-xs\" />\n                                            </div>\n\n\n\n                                        </td>\n                                        <td>\n                                            <div\n                                                class=\"flex w-full justify-content-between  gap-3 md:justify-content-end\">\n                                                <button aria-label=\"Edit\"\n                                                    class=\"p-button p-button-lg p-button-secondary p-1 p-button-text text-gray-800\">\n                                                    <span class=\"material-symbols-rounded text-2xl\">\n                                                        edit\n                                                    </span>\n                                                </button>\n\n                                                <button aria-label=\"Delete\"\n                                                    class=\"p-button p-button-danger p-button-lg p-1 p-button-text text-gray-800\">\n                                                    <span class=\"material-symbols-rounded text-2xl\">\n                                                        delete\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <!-- Expanded Row Content -->\n                                    <tr *ngIf=\"isRowExpanded(product)\">\n                                        <td colspan=\"4\">\n\n\n\n                                            <div class=\"p-2\">\n                                                <h3>Darba laiki</h3>\n                                                <p-table [value]=\"tableData\" [tableStyle]=\"{ ' min-width': '50rem' }\">\n                                                    <ng-template pTemplate=\"header\">\n                                    <tr>\n                                        <th>Darba laiks</th>\n                                        <th>Pārtraukums</th>\n                                        <th>Darba vieta</th>\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-innerProduct>\n                                    <tr>\n                                        <td>{{ innerProduct.darbaLaiks }}</td>\n                                        <td>{{ innerProduct.partraukums }}</td>\n                                        <td>{{ innerProduct.darbaVieta }}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n\n\n                            <h3 class=\"mt-4\">Vajadzības</h3>\n                            <p-table [value]=\"tableData2\" [tableStyle]=\"{ 'min-width': '50rem' }\">\n                                <ng-template pTemplate=\"header\">\n                                    <tr>\n                                        <th>Amats</th>\n                                        <th>Kompetence</th>\n                                        <th>Kompetenču skaits</th>\n                                        <th>Darbnieku skaits</th>\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-innerProduct>\n                                    <tr>\n                                        <td>{{ innerProduct.amats }}</td>\n                                        <td>{{ innerProduct.kompetence }}</td>\n                                        <td>{{ innerProduct.kompetencuSkaits }}</td>\n                                        <td>{{ innerProduct.darbniekuSkaits }}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n\n\n\n\n                        </div>\n\n\n\n\n                        </td>\n                        </tr>\n                        </ng-template>\n                        </p-table>\n\n\n\n                    </div>\n\n\n\n\n\n\n\n\n                </div>\n    </div>\n\n    </p-tabPanel>\n    <p-tabPanel header=\"Plāns & Fakts\">\n    </p-tabPanel>\n    <p-tabPanel header=\"Dokumenti\">\n    </p-tabPanel>\n    </p-tabView>\n</div>\n\n</div>"
        },
        {
            "name": "ConfirmDialogComponent",
            "id": "component-ConfirmDialogComponent-72428e33e219443140df9f7494cc2b0a8205597e942b1304e98bf1c193815f93fe022f6ff5b9c92c4687e5d0732b0fc29fcac03385d9a1c5e1b4debfe24112ea",
            "file": "projects/ngx-ui-web/src/stories/components/confirm-dialog/confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-confirm-dialog-wrapper",
            "styleUrls": [],
            "styles": [
                "\n            :host::ng-deep.p-dialog-footer {\n                display: flex !important;\n                justify-content: start !important;\n                flex-direction: row-reverse !important;\n            }\n        "
            ],
            "template": "<p-toast />\n<p-confirmDialog #cd>\n    <ng-template pTemplate=\"message\" let-message>\n        {{ message.header }}\n    </ng-template>\n</p-confirmDialog>\n\n<div class=\"card flex flex-wrap gap-3 justify-content-center\">\n    <p-button\n        (onClick)=\"confirm1($event)\"\n        label=\"Save\"\n        [outlined]=\"false\"\n        severity=\"primary\"\n    />\n    <p-button\n        (onClick)=\"confirm2($event)\"\n        label=\"Delete\"\n        severity=\"danger\"\n        [outlined]=\"false\"\n    />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "confirm1",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "confirm2",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "ConfirmDialogModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ToastModule } from \"primeng/toast\";\n\n@Component({\n    selector: \"p-confirm-dialog-wrapper\",\n    imports: [\n        CommonModule,\n        ToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ButtonModule,\n        ConfirmDialogModule,\n    ],\n    template: `\n        <p-toast />\n        <p-confirmDialog #cd>\n            <ng-template pTemplate=\"message\" let-message>\n                {{ message.header }}\n            </ng-template>\n        </p-confirmDialog>\n\n        <div class=\"card flex flex-wrap gap-3 justify-content-center\">\n            <p-button\n                (onClick)=\"confirm1($event)\"\n                label=\"Save\"\n                [outlined]=\"false\"\n                severity=\"primary\"\n            />\n            <p-button\n                (onClick)=\"confirm2($event)\"\n                label=\"Delete\"\n                severity=\"danger\"\n                [outlined]=\"false\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            :host::ng-deep.p-dialog-footer {\n                display: flex !important;\n                justify-content: start !important;\n                flex-direction: row-reverse !important;\n            }\n        `,\n    ],\n    standalone: true,\n})\nexport class ConfirmDialogComponent {\n    constructor(\n        private messageService: MessageService,\n        private confirmService: ConfirmationService,\n    ) {}\n\n    confirm1(event: any) {\n        this.confirmService.confirm({\n            target: event.target as EventTarget,\n            message: \"Are you sure that you want to proceed?\",\n            header: \"Confirmation\",\n            icon: \"\",\n            acceptLabel: \"Saglabāt\",\n            rejectLabel: \"Atcelt\",\n            acceptIcon: \"none\",\n            rejectIcon: \"none\",\n            acceptButtonStyleClass: \"p-button-success\",\n            rejectButtonStyleClass: \"p-button-secondary p-button-outlined\",\n            accept: () => {\n                this.messageService.add({\n                    severity: \"success\",\n                    summary: \"Confirmed\",\n                    detail: \"You have accepted\",\n                });\n            },\n            reject: () => {\n                this.messageService.add({\n                    severity: \"secondary\",\n                    summary: \"Rejected\",\n                    detail: \"You have rejected\",\n                    life: 3000,\n                });\n            },\n        });\n    }\n    confirm2(event: any) {\n        this.confirmService.confirm({\n            target: event.target as EventTarget,\n            message: \"Do you want to delete this record?\",\n            header: \"Delete Confirmation\",\n            icon: \"\",\n            acceptLabel: \"Dzēst\",\n            rejectLabel: \"Atcelt\",\n            acceptButtonStyleClass: \"p-button-danger\",\n            rejectButtonStyleClass: \"p-button-secondary p-button-outlined\",\n            acceptIcon: \"none\",\n            rejectIcon: \"none\",\n\n            accept: () => {\n                this.messageService.add({\n                    severity: \"success\",\n                    summary: \"Confirmed\",\n                    detail: \"Record deleted\",\n                });\n            },\n            reject: () => {\n                this.messageService.add({\n                    severity: \"info\",\n                    summary: \"Rejected\",\n                    detail: \"You have rejected\",\n                });\n            },\n        });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            :host::ng-deep.p-dialog-footer {\n                display: flex !important;\n                justify-content: start !important;\n                flex-direction: row-reverse !important;\n            }\n        \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-f5f3df4c3f6e66f8ae5f845a0445c97600427de2a0e61583be8a8d6d70ea190f8610c2a12b424dd13df63eb6c804eb095bf2116fa4bb6d542ac95840509ead36",
            "file": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\n\n@Component({\n    selector: \"numo-dashboard\",\n    standalone: true,\n    imports: [RouterOutlet],\n    templateUrl: \"./dashboard.template.html\",\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class DashboardComponent {\n    title = \"angular-latest\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- create a html div class card that has dynamic width width -->\n<div class=\"card flex bg-white p-4 justify-content-center border-round-sm border border-1 border-gray-200\">\n    Dashboard\n</div>"
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-e20f64385eb6dc2d6672b4cd523bbd7c50dc2605aaeb156271799bb1520324430c4736bbf8ec7c57bcdc96cfa6fbb21b689898162c5ec34180a0e015a22f6603",
            "file": "projects/ngx-ui-web/src/stories/components/file-upload/file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "totalSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "totalSizePercent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "choose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatSize",
                    "args": [
                        {
                            "name": "bytes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "bytes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClearTemplatingUpload",
                    "args": [
                        {
                            "name": "clear",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clear",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemoveTemplatingFile",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "removeFileCallback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "removeFileCallback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectedFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTemplatedUpload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadEvent",
                    "args": [
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "FileUploadModule",
                    "type": "module"
                },
                {
                    "name": "BadgeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n    ConfirmationService,\n    MessageService,\n    PrimeNGConfig,\n} from \"primeng/api\";\nimport { BadgeModule } from \"primeng/badge\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { ToastModule } from \"primeng/toast\";\n\n@Component({\n    selector: \"p-file-upload\",\n    imports: [\n        CommonModule,\n        ToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ButtonModule,\n        FileUploadModule,\n        BadgeModule\n\n    ],\n    templateUrl: \"./file-upload.component.html\",\n    standalone: true,\n})\nexport class FileUploadComponent {\n    files = [];\n\n    totalSize: number = 0;\n\n    totalSizePercent: number = 0;\n\n    constructor(\n        private config: PrimeNGConfig,\n        private messageService: MessageService,\n    ) {}\n\n    choose(event: any, callback: any) {\n        callback();\n    }\n\n    onRemoveTemplatingFile(\n        event: any,\n        file: any,\n        removeFileCallback: any,\n        index: any,\n    ) {\n        removeFileCallback(event, index);\n        this.totalSize -= parseInt(this.formatSize(file.size));\n        this.totalSizePercent = this.totalSize / 10;\n    }\n\n    onClearTemplatingUpload(clear: any) {\n        clear();\n        this.totalSize = 0;\n        this.totalSizePercent = 0;\n    }\n\n    onTemplatedUpload() {\n        this.messageService.add({\n            severity: \"info\",\n            summary: \"Success\",\n            detail: \"File Uploaded\",\n            life: 3000,\n        });\n    }\n\n    onSelectedFiles(event: any) {\n        this.files = event.currentFiles;\n        this.files.forEach((file: any) => {\n            this.totalSize += parseInt(this.formatSize(file.size));\n        });\n        this.totalSizePercent = this.totalSize / 10;\n    }\n\n    uploadEvent(callback: any) {\n        callback();\n    }\n\n    formatSize(bytes: any) {\n        const k = 1024;\n        const dm = 3;\n        const sizes = this.config.translation.fileSizeTypes as any;\n        if (bytes === 0) {\n            return `0 ${sizes[0]}`;\n        }\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        const formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n\n        return `${formattedSize} ${sizes[i]}`;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<p-toast />\n<p-fileUpload name=\"myfile[]\" url=\"https://www.primefaces.org/cdn/api/upload.php\" [multiple]=\"true\" accept=\"image/*\" maxFileSize=\"1000000\" (onUpload)=\"onTemplatedUpload()\" (onSelect)=\"onSelectedFiles($event)\">\n    <ng-template pTemplate=\"header\" let-files let-chooseCallback=\"chooseCallback\" let-clearCallback=\"clearCallback\" let-uploadCallback=\"uploadCallback\">\n        <div class=\"flex flex-wrap justify-content-between align-items-center flex-1 gap-2\">\n            <div class=\"flex gap-2\">\n                <p-button (onClick)=\"choose($event, chooseCallback)\" icon=\"pi pi-images\" [rounded]=\"true\" [outlined]=\"true\" />\n                <p-button (onClick)=\"uploadEvent(uploadCallback)\" icon=\"pi pi-cloud-upload\" [rounded]=\"true\" [outlined]=\"true\" severity=\"success\" [disabled]=\"!files || files.length === 0\" />\n                <p-button (onClick)=\"clearCallback()\" icon=\"pi pi-times\" [rounded]=\"true\" [outlined]=\"true\" severity=\"danger\" [disabled]=\"!files || files.length === 0\" />\n            </div>\n            <p-progressBar [value]=\"totalSizePercent\" [showValue]=\"false\" styleClass=\"md:w-20rem h-1rem w-full md:ml-auto\" [ngClass]=\"{ 'exceeded-progress-bar': totalSizePercent > 100 }\">\n                <span class=\"white-space-nowrap\">{{ totalSize }}B / 1Mb</span>\n            </p-progressBar>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\" let-files let-uploadedFiles=\"uploadedFiles\" let-removeFileCallback=\"removeFileCallback\" let-removeUploadedFileCallback=\"removeUploadedFileCallback\">\n        <div *ngIf=\"files?.length > 0\">\n            <h5>Pending</h5>\n            <div class=\"flex flex-wrap p-0 sm:p-5 gap-5\">\n                @for(file of files;track file; let index = $index){\n                    <div class=\"card m-0 px-6 flex flex-column border-1 surface-border align-items-center gap-3\">\n                        <div>\n                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />\n                        </div>\n                        <span class=\"font-semibold\">{{ file.name }}</span>\n                        <div>{{ formatSize(file.size) }}</div>\n                        <p-badge value=\"Pending\" severity=\"warning\" />\n                        <p-button icon=\"pi pi-times\" (onClick)=\"onRemoveTemplatingFile($event, file, removeFileCallback, index)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />\n                    </div>\n                }\n            </div>\n        </div>\n        <div *ngIf=\"uploadedFiles?.length > 0\">\n            <h5>Completed</h5>\n            <div class=\"flex flex-wrap p-0 sm:p-5 gap-5\">\n                @for(file of uploadedFiles; track file;let index = $index){\n                    <div class=\"card m-0 px-6 flex flex-column border-1 surface-border align-items-center gap-3\">\n                        <div>\n                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />\n                        </div>\n                        <span class=\"font-semibold\">{{ file.name }}</span>\n                        <div>{{ formatSize(file.size) }}</div>\n                        <p-badge value=\"Completed\" class=\"mt-3\" severity=\"success\" />\n                        <p-button icon=\"pi pi-times\" (onClick)=\"removeUploadedFileCallback(index)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />\n                    </div>\n                }\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"file\"> </ng-template>\n    <ng-template pTemplate=\"empty\">\n        <div class=\"flex align-items-center justify-content-center flex-column\">\n            <i class=\"pi pi-cloud-upload border-2 border-circle p-5 text-8xl text-400 border-400\"></i>\n            <p class=\"mt-4 mb-0\">Drag and drop files here to upload.</p>\n        </div>\n    </ng-template>\n</p-fileUpload>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-70f0f27817ac474e4a336132a7bc533104af4739a575626bfa10900765d13436f66afffb71e28deec3e9f1b3d226988d9a32f4012646219141ab5900e675eff3",
            "file": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isStoryBook",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClicked",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                },
                {
                    "name": "userMenuItemSelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "BreakPoint",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "items",
                    "defaultValue": "[...Menu]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "storyMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'storyMenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "userMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'userMenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "[...UserMenuItems]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUserMenuItemClick",
                    "args": [
                        {
                            "name": "menuItem",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menuItem",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showUserMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "OverlayPanelModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "IconFieldModule",
                    "type": "module"
                },
                {
                    "name": "InputIconModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport {\n    Component,\n    CUSTOM_ELEMENTS_SCHEMA,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { MenuModule } from \"primeng/menu\";\nimport { Menu } from \"../left-menu/menu.model\";\nimport { UserMenuItems } from \"./user-menu.model\";\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\nimport { LeftMenuComponent } from \"../left-menu/left-menu.component\";\nimport { IconComponent } from \"../icon/icon.component\";\nimport { IconFieldModule } from \"primeng/iconfield\";\nimport { InputIconModule } from \"primeng/inputicon\";\nimport { ButtonModule } from \"primeng/button\";\n\n@Component({\n    selector: \"numo-header\",\n    standalone: true,\n    imports: [\n        FormsModule,\n        CommonModule,\n        InputTextModule,\n        MenuModule,\n        OverlayPanelModule,\n        LeftMenuComponent,\n        IconComponent,\n        IconFieldModule,\n        InputIconModule,\n        ButtonModule,\n    ],\n    templateUrl: \"./header.template.html\",\n    styles: [],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class HeaderComponent {\n    isMenuVisible = false;\n    @Input() isStoryBook = false;\n    @ViewChild(\"menu\") menu: any;\n    @ViewChild(\"storyMenu\") storyMenu: any;\n    @ViewChild(\"userMenu\") userMenu: any; // Reference to user menu\n    @Output() menuClicked = new EventEmitter<boolean>(); // Emit boolean state\n    @Output() userMenuItemSelected = new EventEmitter<string>(); // New event\n    items = [...Menu];\n    userMenuItems = [...UserMenuItems]; // Use the imported user menu items\n    BreakPoint = 1024;\n\n    /*\n    toggleMenu(event: Event) {\n        this.isMenuVisible = !this.isMenuVisible;\n        if (this.isStoryBook) {\n            this.storyMenu.toggle(event);\n            return;\n        }\n        if (window.innerWidth < this.BreakPoint) {\n            this.menu.toggle(event);\n            this.isMenuVisible = false;\n        }\n        this.menuClicked.emit(this.isMenuVisible);\n    }\n\n    closeMenu() {\n        this.isMenuVisible = false;\n    }*/\n\n    toggleMenu(event: Event) {\n        this.isMenuVisible = !this.isMenuVisible;\n\n        // Add or remove the class on the body tag based on isMenuVisible\n        if (this.isMenuVisible) {\n            document.body.classList.add(\"menu-visible\");\n        } else {\n            document.body.classList.remove(\"menu-visible\");\n        }\n\n        this.menuClicked.emit(this.isMenuVisible);\n    }\n\n    closeMenu() {\n        this.isMenuVisible = false;\n\n        // Ensure the class is removed from the body when the menu is closed\n        document.body.classList.remove(\"menu-visible\");\n    }\n\n    onUserMenuItemClick(menuItem: string) {\n        this.userMenuItemSelected.emit(menuItem); // Emit the selected menu item\n    }\n\n    showUserMenu(event: Event) {\n        this.userMenu.toggle(event); // Show the user menu\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header flex align-items-center text-white justify-content-between gap-3 \">\n    <div class=\"flex align-items-center font-bold text-2xl h-10\">\n        <span #menuButton (click)=\"toggleMenu($event)\" [ngClass]=\"isMenuVisible ? 'pi pi-times' : 'pi pi-bars'\"\n            class=\"icon text-gray-800 cursor-pointer\">\n        </span>\n\n\n\n        <numo-left-menu [items]=\"items\" class=\"left-menu\"></numo-left-menu>\n\n        <img class=\"ml-3\" height=\"30\" src=\"logo.png\" alt=\"logo\" />\n    </div>\n    <div class=\"flex justify-center relative w-30rem\">\n        <p-iconField iconPosition=\"right\" class=\"w-full\">\n            <p-inputIcon>\n                <numo-icon icon=\"search\" type=\"material-symbols\" class=\"text-2xl\"></numo-icon>\n            </p-inputIcon>\n            <input type=\"text\" pInputText placeholder=\"Meklēt\" class=\"w-full\" />\n        </p-iconField>\n    </div>\n\n    <div class=\"flex justify-content-end\">\n        <p-menu #userMenu [model]=\"userMenuItems\" [popup]=\"true\">\n            <ng-template pTemplate=\"submenuheader\" let-item>\n                <span class=\"font-bold\">{{ item.label }}</span>\n            </ng-template>\n            <ng-template pTemplate=\"item\" let-item>\n                <a pRipple class=\"flex align-items-center p-menuitem-link\">\n                    <numo-icon [icon]=\"item.icon\" [type]=\"item.type\"\n                        class=\"text-2xl flex align-items-center\"></numo-icon>\n                    <span class=\"ml-2\">{{ item.label }}</span>\n\n                    <span *ngIf=\"item.shortcut\"\n                        class=\"ml-auto border-1 surface-border border-round surface-100 text-xs p-1\">\n                        {{ item.shortcut }}\n                    </span>\n                </a>\n            </ng-template>\n        </p-menu>\n\n        <div (click)=\"showUserMenu($event)\" class=\"usermenu cursor-pointer py-1\">\n            <span class=\"hidden sm:block\">Jānis Bērziņš</span>\n            <span class=\" sm:hidden block p-2 bg-blue-200 border-circle \">JB</span>\n            <div class=\"caret\"></div>\n            <div class=\"text-ellipsis text-xs hidden sm:block\">\n                Liepājas valstspilsētas pašvaldības aģentūra \"Liepājas\n                Sabiedriskais transports\"\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-bf0af6fc1f6b1cff3c6bcef986c70f460a04b25988ea80023780d8ec3f8ff5664770e1e2b06588851cc473810be2764c99a662ca1d91bc255301eba4ecb81712",
            "file": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\" \"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "\"black\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"12px\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primeng\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"iconify\" | \"material-symbols\" | \"primeng\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n@Component({\n    selector: \"numo-icon\",\n    templateUrl: \"./icon.template.html\",\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class IconComponent {\n    @Input() icon!: string;\n    @Input() type: \"iconify\" | \"material-symbols\" | \"primeng\" = \"primeng\";\n    @Input() class: string = \" \";\n    @Input() size: string = \"12px\";\n    @Input() color: string = \"black\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<span *ngIf=\"type === 'primeng'\" class=\"pi\" [ngClass]=\"icon\" [class]=\"class\"\n    [ngStyle]=\"{'font-size': size,color: color}\"></span>\n<span *ngIf=\"type === 'iconify'\" class=\"iconify\" [attr.data-icon]=\"icon\" [class]=\"class\"\n    [ngStyle]=\"{'font-size': size, color: color}\"></span>\n<span *ngIf=\"type === 'material-symbols'\" class=\"material-symbols-rounded\" [class]=\"class\"\n    [ngStyle]=\"{'font-size': size, color: color}\">{{ icon }}</span>"
        },
        {
            "name": "LeftMenuComponent",
            "id": "component-LeftMenuComponent-ec46f43d1064abdf199ceea0bdf556d5529005f42bc8b5db78d1cd98b04e825af07330c553b104481baf59dd0d7e1cc338d4872f9acdcbb4787e1b6e3d27ed4a",
            "file": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-left-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./left-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "notificationCount",
                    "defaultValue": "\"0\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "isFirstLevel",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PanelMenuModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "Button"
                },
                {
                    "name": "BadgeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PanelMenuModule } from \"primeng/panelmenu\";\nimport { IconComponent } from \"../icon/icon.component\";\nimport { Button } from \"primeng/button\";\nimport { BadgeModule } from \"primeng/badge\";\n\n@Component({\n    selector: \"numo-left-menu\",\n    standalone: true,\n    imports: [\n        FormsModule,\n        CommonModule,\n        PanelMenuModule,\n        IconComponent,\n        Button,\n        BadgeModule,\n    ],\n    templateUrl: \"./left-menu.component.html\",\n    styles: [],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class LeftMenuComponent {\n    @Input() items: any = [];\n    @Input() className = \"\";\n    @Input() notificationCount = \"0\";\n    isFirstLevel(item: any): boolean {\n        // Check if the item is in the root items array\n        return this.items.includes(item);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"pb-2\">\n    @if(notificationCount !== '0'){\n    <p-button label=\"Uzdevumi\" iconPos=\"left\" class=\"white-outlined-button\" styleClass=\"w-full text-left py-3\"\n        [badge]=\"notificationCount\" badgeClass=\"p-badge-success\" />\n    }\n    @if(notificationCount === '0'){\n    <p-button label=\"Uzdevumi\" iconPos=\"left\" class=\"white-outlined-button\" styleClass=\"w-full text-left py-3\" />\n    }\n</div>\n<p-panelMenu [model]=\"items\" [styleClass]=\"className\">\n    <ng-template pTemplate=\"item\" let-item>\n        <a pRipple class=\"flex align-items-center px-3 py-2 cursor-pointer\" [ngClass]=\"{ 'py-3': isFirstLevel(item) }\">\n            <span class=\"p-panelmenu-icon p-panelmenu-icon-chevron pi\" *ngIf=\"item.items.length > 0\" [ngClass]=\"{\n                    'pi-chevron-right': !item.expanded,\n                    'pi-chevron-down': item.expanded,\n                }\"></span>\n            <numo-icon [icon]=\"item.icon\" [type]=\"item.type\" [class]=\"item.iconClass ? item.iconClass : 'text-2xl'\"\n                class=\"flex align-items-center\"></numo-icon>\n            <span class=\"ml-2 font-medium\">\n                {{ item.label }}\n            </span>\n            <span *ngIf=\"item.shortcut\" class=\"ml-auto border-1 surface-border border-round surface-100 text-xs p-1\">\n                {{ item.shortcut }}\n            </span>\n\n        </a>\n    </ng-template>\n</p-panelMenu>"
        },
        {
            "name": "NumoTesterComponent",
            "id": "component-NumoTesterComponent-9e784ea9eea4dc1290bd70975197204dc02d178817aa88bd295ece6e19ec9829fdd50e437750bb874d4241cbd76055b1a589f931a4902a8fcbe2cf10753afa9a",
            "file": "projects/ngx-ui-web/src/lib/tester.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-tester",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"text-red-600 bg-black object-fill\">\n    Numo test component is working just fine, and it's\n    {{ lilText }}!\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "lilText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: \"numo-tester\",\n    standalone: true,\n    template: `\n        <div class=\"text-red-600 bg-black object-fill\">\n            Numo test component is working just fine, and it's\n            {{ lilText }}!\n        </div>\n    `,\n})\nexport class NumoTesterComponent {\n    @Input() lilText: string = \"\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TimePickerComponent",
            "id": "component-TimePickerComponent-fb10720dd0e77a11a95278e52e462633542010070291fceb4e5803408625580d12bb017a3e5a632a2209784ae5c2926e3ed9ba29c127ea0b491874c53a92194c",
            "file": "projects/ngx-ui-web/src/stories/components/time-picker/time-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-time-picker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./time-picker.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n@Component({\n    selector: \"numo-time-picker\",\n    templateUrl: \"./time-picker.template.html\",\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class TimePickerComponent {\n    @Input() disabled: boolean = false;\n    @Input() required: boolean = false;\n    @Input() min: string = \"\";\n    @Input() max: string = \"\";\n    @Input() step: string = \"\";\n\n    @Input() class: string = \"\";\n\n    @Input() value: string = \"\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<input\n    type=\"time\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [value]=\"value\"\n    class=\"p-element p-inputtext p-component timepicker\"\n/>\n"
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-a83760a25cbe0577710bd519183a0e36c4446d7b41ac1e3a0eb55d64235496c3f486a19630703d4407b7f1a931b4b92b49508c746615169ba1bed5eb77d5fcf7",
            "file": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<p-toast></p-toast>\n<p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "detail",
                    "defaultValue": "\"Message Content\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "defaultValue": "\"success\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "summary",
                    "defaultValue": "\"Success\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MessageService } from \"primeng/api\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ToastModule } from \"primeng/toast\";\n\n@Component({\n    selector: \"p-toast-wrapper\",\n    imports: [ToastModule, FormsModule, ReactiveFormsModule, ButtonModule],\n    template: `\n        <p-toast></p-toast>\n        <p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n    `,\n    providers: [MessageService],\n    standalone: true,\n})\nexport class ToastComponent {\n    @Input() severity: string = \"success\";\n    @Input() summary: string = \"Success\";\n    @Input() detail: string = \"Message Content\";\n\n    constructor(private messageService: MessageService) {}\n\n    show() {\n        this.messageService.add({\n            severity: this.severity,\n            summary: this.summary,\n            detail: this.detail,\n        });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-dc2b8cdaefbe7fe8d8f10dbc321c56a6d4e901a795fdd6a4cbfac987dcebf0424bf50b0c711b34a29b1a59fdff3f395b30e0fd677af78355a118eccf3eef70f3",
            "file": "projects/ngx-ui-web/src/stories/components/tree/tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-tree-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "files",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TreeNode[]",
                    "decorators": []
                },
                {
                    "name": "lazyLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TreeNode",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "nodes2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "duplicateData",
                    "args": [
                        {
                            "name": "data",
                            "type": "TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initiateNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initiateNodes2",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapse",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpand",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeUnselect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpand",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpand2",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TreeModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { MessageService, TreeNode } from \"primeng/api\";\nimport { ToastModule } from \"primeng/toast\";\nimport { TreeModule } from \"primeng/tree\";\n\n@Component({\n    selector: \"p-tree-wrapper\",\n    templateUrl: \"./tree.component.html\",\n    standalone: true,\n    imports: [TreeModule, ToastModule,CommonModule],\n    providers: [MessageService],\n})\nexport class TreeComponent {\n    @Input() files!: TreeNode[];\n    @Input() selectedFile!: TreeNode;\n    @Input() events: boolean = false;\n    @Input() lazyLoading: boolean = false;\n    @Input() virtualScroll: boolean = false;\n\n    constructor(private messageService: MessageService,private cd: ChangeDetectorRef) {}\n\n    loading: boolean = false;\n\n    nodes!: TreeNode[];\n\n    nodes2!: TreeNode[]; \n    ngOnInit() {\n        this.loading = true;\n        this.nodes2 = this.initiateNodes2();\n\n        setTimeout(() => {\n            this.nodes = this.initiateNodes();\n            this.loading = false;\n            this.nodes2.map((node) => (node.loading = false));\n            this.cd.markForCheck();\n        }, 2000);\n        this.files = this.duplicateData(this.files, 50);\n        this.cd.markForCheck();\n    }\n    \n    duplicateData(data: TreeNode[], count: number): TreeNode[] {\n        let duplicatedData: TreeNode[] = [];\n        for (let i = 0; i < count; i++) {\n            duplicatedData = [...duplicatedData, ...data.map((item) => ({ ...item }))];\n        }\n        return duplicatedData;\n    }\n    nodeExpand(event: any) {\n        this.messageService.add({\n            severity: \"success\",\n            summary: \"Node Expanded\",\n            detail: event.node.label,\n        });\n    }\n\n    nodeCollapse(event: any) {\n        this.messageService.add({\n            severity: \"warn\",\n            summary: \"Node Collapsed\",\n            detail: event.node.label,\n        });\n    }\n\n    nodeSelect(event: any) {\n        this.messageService.add({\n            severity: \"info\",\n            summary: \"Node Selected\",\n            detail: event.node.label,\n        });\n    }\n\n    nodeUnselect(event: any) {\n        this.messageService.add({\n            severity: \"info\",\n            summary: \"Node Unselected\",\n            detail: event.node.label,\n        });\n    }\n    initiateNodes(): TreeNode[] {\n        return [\n            {\n                key: '0',\n                label: 'Node 0',\n                leaf: false\n            },\n            {\n                key: '1',\n                label: 'Node 1',\n                leaf: false\n            },\n            {\n                key: '2',\n                label: 'Node 2',\n                leaf: false\n            }\n        ];\n    }\n\n    initiateNodes2(): TreeNode[] {\n        return [\n            {\n                key: '0',\n                label: 'Node 0',\n                leaf: false,\n                loading: true\n            },\n            {\n                key: '1',\n                label: 'Node 1',\n                leaf: false,\n                loading: true\n            },\n            {\n                key: '2',\n                label: 'Node 2',\n                leaf: false,\n                loading: true\n            }\n        ];\n    }\n\n    onNodeExpand(event: any) {\n        if (!event.node.children) {\n            this.loading = true;\n\n            setTimeout(() => {\n                let _node = { ...event.node };\n                _node.children = [];\n\n                for (let i = 0; i < 3; i++) {\n                    _node.children.push({\n                        key: event.node.key + '-' + i,\n                        label: 'Lazy ' + event.node.label + '-' + i\n                    });\n                }\n\n                this.nodes[parseInt(event.node.key, 10)] = _node;\n\n                this.loading = false;\n                this.cd.markForCheck();\n            }, 500);\n        }\n    }\n\n    onNodeExpand2(event: any) {\n        if (!event.node.children) {\n            event.node.loading = true;\n\n            setTimeout(() => {\n                let _node = { ...event.node };\n                _node.children = [];\n\n                for (let i = 0; i < 3; i++) {\n                    _node.children.push({\n                        key: event.node.key + '-' + i,\n                        label: 'Lazy ' + event.node.label + '-' + i\n                    });\n                }\n\n                const key = parseInt(_node.key, 10);\n                this.nodes2[key] = { ..._node, loading: false };\n                this.cd.markForCheck();\n            }, 500);\n        }\n    }\n}\n\n ",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "@if (events) {\n    <div class=\"card flex justify-content-center\">\n        <p-toast />\n        <p-tree\n            [value]=\"files\"\n            class=\"w-full md:w-30rem\"\n            selectionMode=\"single\"\n            [(selection)]=\"selectedFile\"\n            (onNodeExpand)=\"nodeExpand($event)\"\n            (onNodeCollapse)=\"nodeCollapse($event)\"\n            (onNodeSelect)=\"nodeSelect($event)\"\n            (onNodeUnselect)=\"nodeUnselect($event)\"\n        />\n    </div>\n}\n\n@if(lazyLoading){\n    <div class=\"card flex flex-wrap p-fluid gap-3\">\n        <div class=\"flex-auto md:flex md:justify-content-start md:align-items-center flex-column\">\n            <label for=\"mask\" class=\"font-bold block mb-2\">Mask Mode</label>\n            <p-tree \n                class=\"w-full md:w-30rem\" \n                [value]=\"nodes\" \n                (onNodeExpand)=\"onNodeExpand($event)\" \n                [loading]=\"loading\" />\n        </div>\n        <div class=\"flex-auto md:flex md:justify-content-start md:align-items-center flex-column\">\n            <label for=\"icon\" class=\"font-bold block mb-2\">Icon Mode</label>\n            <p-tree \n                class=\"w-full md:w-30rem\" \n                [value]=\"nodes2\" \n                loadingMode=\"icon\" \n                (onNodeExpand)=\"onNodeExpand2($event)\" />\n        </div>\n    </div>\n}\n\n@if(virtualScroll){\n    <p-tree \n    class=\"w-full md:w-30rem\" \n    scrollHeight=\"250px\" \n    [virtualScroll]=\"true\" \n    [virtualScrollItemSize]=\"46\" \n    [value]=\"files\" />\n}"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "commonFiles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        key: \"0\",\n        label: \"Documents\",\n        data: \"Documents Folder\",\n        icon: \"pi pi-fw pi-inbox\",\n        children: [\n            {\n                key: \"0-0\",\n                label: \"Work\",\n                data: \"Work Folder\",\n                icon: \"pi pi-fw pi-cog\",\n                children: [\n                    {\n                        key: \"0-0-0\",\n                        label: \"Expenses.doc\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Expenses Document\",\n                    },\n                    {\n                        key: \"0-0-1\",\n                        label: \"Resume.doc\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Resume Document\",\n                    },\n                ],\n            },\n            {\n                key: \"0-1\",\n                label: \"Home\",\n                data: \"Home Folder\",\n                icon: \"pi pi-fw pi-home\",\n                children: [\n                    {\n                        key: \"0-1-0\",\n                        label: \"Invoices.txt\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Invoices for this month\",\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        key: \"1\",\n        label: \"Events\",\n        data: \"Events Folder\",\n        icon: \"pi pi-fw pi-calendar\",\n        children: [\n            {\n                key: \"1-0\",\n                label: \"Meeting\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Meeting\",\n            },\n            {\n                key: \"1-1\",\n                label: \"Product Launch\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Product Launch\",\n            },\n            {\n                key: \"1-2\",\n                label: \"Report Review\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Report Review\",\n            },\n        ],\n    },\n    {\n        key: \"2\",\n        label: \"Movies\",\n        data: \"Movies Folder\",\n        icon: \"pi pi-fw pi-star-fill\",\n        children: [\n            {\n                key: \"2-0\",\n                icon: \"pi pi-fw pi-star-fill\",\n                label: \"Al Pacino\",\n                data: \"Pacino Movies\",\n                children: [\n                    {\n                        key: \"2-0-0\",\n                        label: \"Scarface\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Scarface Movie\",\n                    },\n                    {\n                        key: \"2-0-1\",\n                        label: \"Serpico\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Serpico Movie\",\n                    },\n                ],\n            },\n            {\n                key: \"2-1\",\n                label: \"Robert De Niro\",\n                icon: \"pi pi-fw pi-star-fill\",\n                data: \"De Niro Movies\",\n                children: [\n                    {\n                        key: \"2-1-0\",\n                        label: \"Goodfellas\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Goodfellas Movie\",\n                    },\n                    {\n                        key: \"2-1-1\",\n                        label: \"Untouchables\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Untouchables Movie\",\n                    },\n                ],\n            },\n        ],\n    },\n]"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        label: \"Mans Numo\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \"Vadība\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \" Pro Numo\",\n        expanded: true,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Avansa norēkini\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Komandējumi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\n\n                items: [],\n            },\n            {\n                label: \"Vadības grāmatvedība\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Līgumi\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n]"
            },
            {
                "name": "MenuItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    { label: \"Darba laiki\" },\n    { label: \"Atpūtas laiki\" },\n    { label: \"Izmantošanas skaits\" },\n    { label: \"Secības šabloni\" },\n]"
            },
            {
                "name": "nodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/tree-select/tree-select.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        key: '0',\n        label: 'Documents',\n        data: 'Documents Folder',\n        icon: 'pi pi-fw pi-inbox',\n        children: [\n            {\n                key: '0-0',\n                label: 'Work',\n                data: 'Work Folder',\n                icon: 'pi pi-fw pi-cog',\n                children: [\n                    { key: '0-0-0', label: 'Expenses.doc', icon: 'pi pi-fw pi-file', data: 'Expenses Document' },\n                    { key: '0-0-1', label: 'Resume.doc', icon: 'pi pi-fw pi-file', data: 'Resume Document' }\n                ]\n            },\n            {\n                key: '0-1',\n                label: 'Home',\n                data: 'Home Folder',\n                icon: 'pi pi-fw pi-home',\n                children: [{ key: '0-1-0', label: 'Invoices.txt', icon: 'pi pi-fw pi-file', data: 'Invoices for this month' }]\n            }\n        ]\n    },\n    {\n        key: '1',\n        label: 'Events',\n        data: 'Events Folder',\n        icon: 'pi pi-fw pi-calendar',\n        children: [\n            { key: '1-0', label: 'Meeting', icon: 'pi pi-fw pi-calendar-plus', data: 'Meeting' },\n            { key: '1-1', label: 'Product Launch', icon: 'pi pi-fw pi-calendar-plus', data: 'Product Launch' },\n            { key: '1-2', label: 'Report Review', icon: 'pi pi-fw pi-calendar-plus', data: 'Report Review' }\n        ]\n    },\n    {\n        key: '2',\n        label: 'Movies',\n        data: 'Movies Folder',\n        icon: 'pi pi-fw pi-star-fill',\n        children: [\n            {\n                key: '2-0',\n                icon: 'pi pi-fw pi-star-fill',\n                label: 'Al Pacino',\n                data: 'Pacino Movies',\n                children: [\n                    { key: '2-0-0', label: 'Scarface', icon: 'pi pi-fw pi-video', data: 'Scarface Movie' },\n                    { key: '2-0-1', label: 'Serpico', icon: 'pi pi-fw pi-video', data: 'Serpico Movie' }\n                ]\n            },\n            {\n                key: '2-1',\n                label: 'Robert De Niro',\n                icon: 'pi pi-fw pi-star-fill',\n                data: 'De Niro Movies',\n                children: [\n                    { key: '2-1-0', label: 'Goodfellas', icon: 'pi pi-fw pi-video', data: 'Goodfellas Movie' },\n                    { key: '2-1-1', label: 'Untouchables', icon: 'pi pi-fw pi-video', data: 'Untouchables Movie' }\n                ]\n            }\n        ]\n    }\n]"
            },
            {
                "name": "Products",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        id: 1,\n        code: \"f230fh0g3\",\n        name: \"Darba dienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Parasts\",\n        badgeSeverity: \"info\",\n        inventoryStatus: \"Standarta\",\n        days: [1, 2, 3, 4, 5],\n    },\n    {\n        id: 2,\n        code: \"f230fh0g3\",\n        name: \"Citas foršas darba dienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Ideāls\",\n        badgeSeverity: \"success\",\n        inventoryStatus: \"Nestandarta\",\n        days: [1, 4, 5],\n        dates: [\"12.12.2024\", \"12.12.2024\"],\n    },\n    {\n        id: 3,\n        code: \"f230fh0g3\",\n        name: \"Brīvdienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Nestandarta\",\n        badgeSeverity: \"warning\",\n        inventoryStatus: \"Standarta\",\n        days: [1, 5],\n        dates: [\"12.12.2024\"],\n    },\n]"
            },
            {
                "name": "TableData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        darbaLaiks: \"8:00 - 17:00 (8h 15min)\",\n        partraukums: \"Pusdienlaiks\",\n        darbaVieta: \"Ofiss\",\n    },\n    {\n        darbaLaiks: \"18:00 - 23:00 (4h 45min)\",\n        partraukums: \"15min\",\n        darbaVieta: \"Noliktava\",\n    },\n]"
            },
            {
                "name": "TableData2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        amats: \"Biroja administrators\",\n        kompetence: \"Māk rakstīt | Sertificēts revidents\",\n        kompetencuSkaits: \"2\",\n        darbniekuSkaits: \"min: 1 / max: 1 / opt: 1\",\n    },\n]"
            },
            {
                "name": "templateNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        key: \"0\",\n        label: \"Introduction\",\n        children: [\n            {\n                key: \"0-0\",\n                label: \"What is Angular\",\n                data: \"https://angular.io\",\n                type: \"url\",\n            },\n            {\n                key: \"0-1\",\n                label: \"Getting Started\",\n                data: \"https://angular.io/guide/setup-local\",\n                type: \"url\",\n            },\n            {\n                key: \"0-2\",\n                label: \"Learn and Explore\",\n                data: \"https://angular.io/guide/architecture\",\n                type: \"url\",\n            },\n            {\n                key: \"0-3\",\n                label: \"Take a Look\",\n                data: \"https://angular.io/start\",\n                type: \"url\",\n            },\n        ],\n    },\n    {\n        key: \"1\",\n        label: \"Components In-Depth\",\n        children: [\n            {\n                key: \"1-0\",\n                label: \"Component Registration\",\n                data: \"https://angular.io/guide/component-interaction\",\n                type: \"url\",\n            },\n            {\n                key: \"1-1\",\n                label: \"User Input\",\n                data: \"https://angular.io/guide/user-input\",\n                type: \"url\",\n            },\n            {\n                key: \"1-2\",\n                label: \"Hooks\",\n                data: \"https://angular.io/guide/lifecycle-hooks\",\n                type: \"url\",\n            },\n            {\n                key: \"1-3\",\n                label: \"Attribute Directives\",\n                data: \"https://angular.io/guide/attribute-directives\",\n                type: \"url\",\n            },\n        ],\n    },\n]"
            },
            {
                "name": "UserMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/header/user-menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        label: \"Profils\",\n        expanded: true,\n        items: [\n            {\n                label: \"Iestatījumi\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"settings\",\n                route: \"\",\n            },\n            {\n                label: \"Paroles maiņa\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"password\",\n                route: \"\",\n            },\n            {\n                label: \"Iziet\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"logout\",\n                route: \"\",\n            },\n        ],\n    },\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts": [
                {
                    "name": "commonFiles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        key: \"0\",\n        label: \"Documents\",\n        data: \"Documents Folder\",\n        icon: \"pi pi-fw pi-inbox\",\n        children: [\n            {\n                key: \"0-0\",\n                label: \"Work\",\n                data: \"Work Folder\",\n                icon: \"pi pi-fw pi-cog\",\n                children: [\n                    {\n                        key: \"0-0-0\",\n                        label: \"Expenses.doc\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Expenses Document\",\n                    },\n                    {\n                        key: \"0-0-1\",\n                        label: \"Resume.doc\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Resume Document\",\n                    },\n                ],\n            },\n            {\n                key: \"0-1\",\n                label: \"Home\",\n                data: \"Home Folder\",\n                icon: \"pi pi-fw pi-home\",\n                children: [\n                    {\n                        key: \"0-1-0\",\n                        label: \"Invoices.txt\",\n                        icon: \"pi pi-fw pi-file\",\n                        data: \"Invoices for this month\",\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        key: \"1\",\n        label: \"Events\",\n        data: \"Events Folder\",\n        icon: \"pi pi-fw pi-calendar\",\n        children: [\n            {\n                key: \"1-0\",\n                label: \"Meeting\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Meeting\",\n            },\n            {\n                key: \"1-1\",\n                label: \"Product Launch\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Product Launch\",\n            },\n            {\n                key: \"1-2\",\n                label: \"Report Review\",\n                icon: \"pi pi-fw pi-calendar-plus\",\n                data: \"Report Review\",\n            },\n        ],\n    },\n    {\n        key: \"2\",\n        label: \"Movies\",\n        data: \"Movies Folder\",\n        icon: \"pi pi-fw pi-star-fill\",\n        children: [\n            {\n                key: \"2-0\",\n                icon: \"pi pi-fw pi-star-fill\",\n                label: \"Al Pacino\",\n                data: \"Pacino Movies\",\n                children: [\n                    {\n                        key: \"2-0-0\",\n                        label: \"Scarface\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Scarface Movie\",\n                    },\n                    {\n                        key: \"2-0-1\",\n                        label: \"Serpico\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Serpico Movie\",\n                    },\n                ],\n            },\n            {\n                key: \"2-1\",\n                label: \"Robert De Niro\",\n                icon: \"pi pi-fw pi-star-fill\",\n                data: \"De Niro Movies\",\n                children: [\n                    {\n                        key: \"2-1-0\",\n                        label: \"Goodfellas\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Goodfellas Movie\",\n                    },\n                    {\n                        key: \"2-1-1\",\n                        label: \"Untouchables\",\n                        icon: \"pi pi-fw pi-video\",\n                        data: \"Untouchables Movie\",\n                    },\n                ],\n            },\n        ],\n    },\n]"
                },
                {
                    "name": "templateNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        key: \"0\",\n        label: \"Introduction\",\n        children: [\n            {\n                key: \"0-0\",\n                label: \"What is Angular\",\n                data: \"https://angular.io\",\n                type: \"url\",\n            },\n            {\n                key: \"0-1\",\n                label: \"Getting Started\",\n                data: \"https://angular.io/guide/setup-local\",\n                type: \"url\",\n            },\n            {\n                key: \"0-2\",\n                label: \"Learn and Explore\",\n                data: \"https://angular.io/guide/architecture\",\n                type: \"url\",\n            },\n            {\n                key: \"0-3\",\n                label: \"Take a Look\",\n                data: \"https://angular.io/start\",\n                type: \"url\",\n            },\n        ],\n    },\n    {\n        key: \"1\",\n        label: \"Components In-Depth\",\n        children: [\n            {\n                key: \"1-0\",\n                label: \"Component Registration\",\n                data: \"https://angular.io/guide/component-interaction\",\n                type: \"url\",\n            },\n            {\n                key: \"1-1\",\n                label: \"User Input\",\n                data: \"https://angular.io/guide/user-input\",\n                type: \"url\",\n            },\n            {\n                key: \"1-2\",\n                label: \"Hooks\",\n                data: \"https://angular.io/guide/lifecycle-hooks\",\n                type: \"url\",\n            },\n            {\n                key: \"1-3\",\n                label: \"Attribute Directives\",\n                data: \"https://angular.io/guide/attribute-directives\",\n                type: \"url\",\n            },\n        ],\n    },\n]"
                }
            ],
            "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        label: \"Mans Numo\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \"Vadība\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \" Pro Numo\",\n        expanded: true,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Avansa norēkini\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Komandējumi\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\n\n                items: [],\n            },\n            {\n                label: \"Vadības grāmatvedība\",\n\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Līgumi\",\n\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n]"
                }
            ],
            "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts": [
                {
                    "name": "MenuItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    { label: \"Darba laiki\" },\n    { label: \"Atpūtas laiki\" },\n    { label: \"Izmantošanas skaits\" },\n    { label: \"Secības šabloni\" },\n]"
                },
                {
                    "name": "Products",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        id: 1,\n        code: \"f230fh0g3\",\n        name: \"Darba dienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Parasts\",\n        badgeSeverity: \"info\",\n        inventoryStatus: \"Standarta\",\n        days: [1, 2, 3, 4, 5],\n    },\n    {\n        id: 2,\n        code: \"f230fh0g3\",\n        name: \"Citas foršas darba dienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Ideāls\",\n        badgeSeverity: \"success\",\n        inventoryStatus: \"Nestandarta\",\n        days: [1, 4, 5],\n        dates: [\"12.12.2024\", \"12.12.2024\"],\n    },\n    {\n        id: 3,\n        code: \"f230fh0g3\",\n        name: \"Brīvdienas\",\n        slots: [\"8:00 - 17:00 (8h 15min)\", \"18:00 - 23:00 (4h 45min)\"],\n        badgeName: \"Nestandarta\",\n        badgeSeverity: \"warning\",\n        inventoryStatus: \"Standarta\",\n        days: [1, 5],\n        dates: [\"12.12.2024\"],\n    },\n]"
                },
                {
                    "name": "TableData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        darbaLaiks: \"8:00 - 17:00 (8h 15min)\",\n        partraukums: \"Pusdienlaiks\",\n        darbaVieta: \"Ofiss\",\n    },\n    {\n        darbaLaiks: \"18:00 - 23:00 (4h 45min)\",\n        partraukums: \"15min\",\n        darbaVieta: \"Noliktava\",\n    },\n]"
                },
                {
                    "name": "TableData2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        amats: \"Biroja administrators\",\n        kompetence: \"Māk rakstīt | Sertificēts revidents\",\n        kompetencuSkaits: \"2\",\n        darbniekuSkaits: \"min: 1 / max: 1 / opt: 1\",\n    },\n]"
                }
            ],
            "projects/ngx-ui-web/src/stories/components/tree-select/tree-select.data.ts": [
                {
                    "name": "nodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/tree-select/tree-select.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        key: '0',\n        label: 'Documents',\n        data: 'Documents Folder',\n        icon: 'pi pi-fw pi-inbox',\n        children: [\n            {\n                key: '0-0',\n                label: 'Work',\n                data: 'Work Folder',\n                icon: 'pi pi-fw pi-cog',\n                children: [\n                    { key: '0-0-0', label: 'Expenses.doc', icon: 'pi pi-fw pi-file', data: 'Expenses Document' },\n                    { key: '0-0-1', label: 'Resume.doc', icon: 'pi pi-fw pi-file', data: 'Resume Document' }\n                ]\n            },\n            {\n                key: '0-1',\n                label: 'Home',\n                data: 'Home Folder',\n                icon: 'pi pi-fw pi-home',\n                children: [{ key: '0-1-0', label: 'Invoices.txt', icon: 'pi pi-fw pi-file', data: 'Invoices for this month' }]\n            }\n        ]\n    },\n    {\n        key: '1',\n        label: 'Events',\n        data: 'Events Folder',\n        icon: 'pi pi-fw pi-calendar',\n        children: [\n            { key: '1-0', label: 'Meeting', icon: 'pi pi-fw pi-calendar-plus', data: 'Meeting' },\n            { key: '1-1', label: 'Product Launch', icon: 'pi pi-fw pi-calendar-plus', data: 'Product Launch' },\n            { key: '1-2', label: 'Report Review', icon: 'pi pi-fw pi-calendar-plus', data: 'Report Review' }\n        ]\n    },\n    {\n        key: '2',\n        label: 'Movies',\n        data: 'Movies Folder',\n        icon: 'pi pi-fw pi-star-fill',\n        children: [\n            {\n                key: '2-0',\n                icon: 'pi pi-fw pi-star-fill',\n                label: 'Al Pacino',\n                data: 'Pacino Movies',\n                children: [\n                    { key: '2-0-0', label: 'Scarface', icon: 'pi pi-fw pi-video', data: 'Scarface Movie' },\n                    { key: '2-0-1', label: 'Serpico', icon: 'pi pi-fw pi-video', data: 'Serpico Movie' }\n                ]\n            },\n            {\n                key: '2-1',\n                label: 'Robert De Niro',\n                icon: 'pi pi-fw pi-star-fill',\n                data: 'De Niro Movies',\n                children: [\n                    { key: '2-1-0', label: 'Goodfellas', icon: 'pi pi-fw pi-video', data: 'Goodfellas Movie' },\n                    { key: '2-1-1', label: 'Untouchables', icon: 'pi pi-fw pi-video', data: 'Untouchables Movie' }\n                ]\n            }\n        ]\n    }\n]"
                }
            ],
            "projects/ngx-ui-web/src/stories/components/header/user-menu.model.ts": [
                {
                    "name": "UserMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/header/user-menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        label: \"Profils\",\n        expanded: true,\n        items: [\n            {\n                label: \"Iestatījumi\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"settings\",\n                route: \"\",\n            },\n            {\n                label: \"Paroles maiņa\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"password\",\n                route: \"\",\n            },\n            {\n                label: \"Iziet\",\n                items: [],\n                type: \"material-symbols\",\n                icon: \"logout\",\n                route: \"\",\n            },\n        ],\n    },\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumoTesterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TesterService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/confirm-dialog/confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/header/user-menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/time-picker/time-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree-select/tree-select.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commonFiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplaning.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Products",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/timeplaning/timeplanning.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableData2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}