{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-5427a033b24845d07012a0d838d85e252a3a7e2b169c291a45d028727297701717b9278aba6c5dc23a055ccaa221a6459f361865c69c6cb6b5d7c4ebfa62c303",
            "file": "projects/ngx-ui-web/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n    name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "TesterService",
            "id": "injectable-TesterService-1659bf4331862e3b1b9f9be14abd94913c8033bc64efadc8d54ca32d2e29cfa0637bca9ce2ad70aebae15582048cb3b5976658cb492b27d530e1906f9aceaab3",
            "file": "projects/ngx-ui-web/src/lib/tester.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "tellMeSomething",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class TesterService {\r\n    tellMeSomething(): string {\r\n        return \"Something\";\r\n    }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9b8ce49b5cc36cf1339c53d578300e967de701c30268da59c2e922b0713a330040e8a69a19cede573817f81b529eefb8e6c8600f50fecb58f97dce857e9725f5",
            "file": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-home",
            "styleUrls": [],
            "styles": [
                "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        "
            ],
            "templateUrl": [
                "./home.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "items",
                    "defaultValue": "[ { label: \"UZDEVUMI\", menu: [ ...Menu ] } ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\nimport { HeaderComponent } from \"../../components/header/header.component\";\r\nimport { DashboardComponent } from \"../dashboard/dashboard.component\";\r\nimport { Menu } from \"../../components/menu/menu.model\";\r\nimport { CardModule } from \"primeng/card\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { LeftMenuComponent } from \"../../components/left-menu/left-menu.component\";\r\n\r\n@Component({\r\n    selector: \"numo-home\",\r\n    standalone: true,\r\n    imports: [\r\n        RouterOutlet,\r\n        HeaderComponent,\r\n        DashboardComponent,\r\n        CardModule,\r\n        CommonModule,\r\n        LeftMenuComponent,\r\n    ],\r\n    templateUrl: \"./home.template.html\",\r\n    styles: [\r\n        `\r\n            .container {\r\n                display: flex;\r\n                grid-gap: 20px;\r\n                margin-top: 20px;\r\n            }\r\n\r\n            .menu {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                flex: 1;\r\n                max-width: 230px;\r\n                @media (max-width: var(--breakpoint)) {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .dashboard {\r\n                flex: 1;\r\n            }\r\n\r\n            :host ::ng-deep .p-card .p-card-content {\r\n                padding: 5px;\r\n            }\r\n        `,\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class AppComponent {\r\n    isMenuVisible = false;\r\n    title = \"angular-latest\";\r\n    items = [ { label: \"UZDEVUMI\", menu: [ ...Menu ] } ];\r\n\r\n    toggleMenu(isMenuVisible: boolean) {\r\n        this.isMenuVisible = isMenuVisible;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        \n",
            "extends": [],
            "templateData": "<numo-header (menuClicked)=\"toggleMenu($event)\"></numo-header>\r\n\r\n<div class=\"container\">\r\n  @if (isMenuVisible) {\r\n      <div class=\"menu\">\r\n    @for (item of items; track $index) {\r\n        <div class=\"flex flex-column gap-3 w-full\">\r\n      <p-card class=\"border-round-lg w-full\">\r\n        <p class=\"m-0\">\r\n          <span class=\"pi pi-check-circle\"></span> {{ item.label }}\r\n        </p>\r\n      </p-card>\r\n      <numo-left-menu [items]=\"item.menu\"></numo-left-menu>\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n    <div class=\"dashboard\">\r\n    <!-- <rotuer-outlet></router-outlet -->\r\n    <numo-dashboard></numo-dashboard>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-df69b887b8a88571c99d3c1a28c98912c48dc45506c0ff6b07e0325cf5b861df49965385e373ebabda50fbd42d487db1c9abc9f17f8831322bea6a05bc7a4438",
            "file": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-dashboard",
            "styleUrls": [],
            "styles": [
                "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        "
            ],
            "templateUrl": [
                "./dashboard.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"numo-dashboard\",\r\n    standalone: true,\r\n    imports: [ RouterOutlet ],\r\n    templateUrl: \"./dashboard.template.html\",\r\n    styles: [\r\n        `\r\n            .card {\r\n                background: #f4f4f4;\r\n                border-radius: 5px;\r\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n            }\r\n        `,\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class DashboardComponent {\r\n    title = \"angular-latest\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        \n",
            "extends": [],
            "templateData": "<!-- create a html div class card that has dynamic width width -->\r\n<div class=\"card flex bg-white p-4 justify-content-center border-round-lg\">\r\n    Dashboard\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-d808b2f86a7079ee84a6b650272c96892325393029ed26945b9331c3c6698f8202f16781c00fba31b7aa2956bec5ef29d6449027ee048664afd06f6c2aee187a",
            "file": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isStoryBook",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClicked",
                    "defaultValue": "new EventEmitter(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "BreakPoint",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "items",
                    "defaultValue": "[ ...Menu ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "storyMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'storyMenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "UserMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "OverlayPanelModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport {\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { InputTextModule } from \"primeng/inputtext\";\r\nimport { MenuModule } from \"primeng/menu\";\r\nimport { Menu, UserMenuItems } from \"../menu/menu.model\";\r\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\r\nimport { LeftMenuComponent } from \"../left-menu/left-menu.component\";\r\n\r\n@Component({\r\n    selector: \"numo-header\",\r\n    standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        InputTextModule,\r\n        MenuModule,\r\n        OverlayPanelModule,\r\n        LeftMenuComponent,\r\n    ],\r\n    templateUrl: \"./header.template.html\",\r\n    styles: [],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class HeaderComponent {\r\n    isMenuVisible = false;\r\n    @Input() isStoryBook = false;\r\n    @ViewChild(\"menu\") menu: any;\r\n    @ViewChild(\"storyMenu\") storyMenu: any;\r\n    @Output() menuClicked = new EventEmitter(false);\r\n    items = [ ...Menu ];\r\n    userMenuItems = UserMenuItems;\r\n    BreakPoint = 1024;\r\n\r\n    toggleMenu(event: Event) {\r\n        this.isMenuVisible = !this.isMenuVisible;\r\n        if (this.isStoryBook) {\r\n            this.storyMenu.toggle(event);\r\n            return;\r\n        }\r\n        if (window.innerWidth < this.BreakPoint) {\r\n            this.menu.toggle(event);\r\n            this.isMenuVisible = false;\r\n        }\r\n        this.menuClicked.emit(this.isMenuVisible);\r\n    }\r\n\r\n    closeMenu() {\r\n        this.isMenuVisible = false;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header flex justify-content-between items-center p-2 text-white\">\r\n  <div class=\"logo flex items-center font-bold text-2xl h-10\">\r\n    <div>\r\n      <iconify-icon\r\n          (click)=\"toggleMenu($event)\"\r\n          class=\"icon text-gray-800 cursor-pointer\"\r\n          icon=\"cil:hamburger-menu\"\r\n          #menuButton\r\n      ></iconify-icon>\r\n      <p-overlayPanel #menu>\r\n        <div class=\"flex flex-column gap-3\">\r\n          <numo-left-menu [items]=\"items\"></numo-left-menu>\r\n        </div>\r\n      </p-overlayPanel>\r\n      <p-overlayPanel #storyMenu>\r\n        <div class=\"flex flex-column gap-3\">\r\n          <numo-left-menu [items]=\"items\"></numo-left-menu>\r\n        </div>\r\n      </p-overlayPanel>\r\n    </div>\r\n    <img class=\"ml-3\" height=\"30\" src=\"logo.png\" alt=\"logo\" />\r\n  </div>\r\n  <div class=\"flex justify-center mx-5 relative\">\r\n    <div class=\"flex justify-center w-full max-w-[500px] relative\">\r\n      <iconify-icon\r\n          class=\"icon text-gray-800 absolute top-[15px] left-[12px]\"\r\n          style=\"top: 8px; left: 12px\"\r\n          icon=\"il:search\"\r\n      ></iconify-icon>\r\n      <input\r\n          type=\"text\"\r\n          style=\"text-indent: 35px\"\r\n          class=\"text-gray-800 p-0 pl-10\"\r\n          pInputText\r\n      />\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class=\"relative inline-block\">\r\n      <span\r\n          class=\"flex cursor-pointer text-gray-800 relative gap-2 align-items-center justify-content-between\"\r\n          (click)=\"userMenu.toggle($event)\"\r\n      ><iconify-icon\r\n          class=\"bell-icon text-gray-800\"\r\n          icon=\"il:bell\"\r\n      ></iconify-icon\r\n      >Username</span\r\n      >\r\n    </div>\r\n    <p-menu #userMenu [model]=\"userMenuItems\" [popup]=\"true\" />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-adcc2d0ea27f9c1add4a993bdc440e75f84bd5885a46642ccfcacfc3eba0b0bd871d4c0b80ead86e73c1aa67de593cf547029915d4087dd915b76d2371a97668",
            "file": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"text-gray-800\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primeng\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"iconify\" | \"primeng\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"numo-icon\",\r\n    templateUrl: \"./icon.template.html\",\r\n    standalone: true,\r\n    imports: [],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class IconComponent {\r\n    @Input() icon!: string;\r\n    @Input() type: \"iconify\" | \"primeng\" = \"primeng\";\r\n    @Input() class: string = \"text-gray-800\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (type === 'iconify') {\r\n    <iconify-icon icon=\"{{ icon }}\" [ngClass]=\"class\"></iconify-icon>\r\n}\r\n"
        },
        {
            "name": "LeftMenuComponent",
            "id": "component-LeftMenuComponent-7f27233281cf23addbc12b2ae1be04767c877a3a3b14545790b1ea964abbabb117e88fc1f29817f1fbf98b2d494da365ca82c073aa5269ee25c03298f4c33657",
            "file": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-left-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./left-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "{}",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PanelMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { PanelMenuModule } from \"primeng/panelmenu\";\r\n\r\n@Component({\r\n    selector: \"numo-left-menu\",\r\n    standalone: true,\r\n    imports: [ FormsModule, CommonModule, PanelMenuModule ],\r\n    templateUrl: \"./left-menu.component.html\",\r\n    styles: [],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class LeftMenuComponent {\r\n    @Input() items = [];\r\n    @Input() className = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-panelMenu [model]=\"items\" [styleClass]=\"className\">\r\n  <ng-template pTemplate=\"item\" let-item>\r\n    <a pRipple class=\"flex align-items-center px-3 py-2 cursor-pointer\">\r\n      <i [class]=\"item.icon\"></i>\r\n      <span class=\"ml-2\">\r\n        {{ item.label }}\r\n      </span>\r\n      <span\r\n          *ngIf=\"item.shortcut\"\r\n          class=\"ml-auto border-1 surface-border border-round surface-100 text-xs p-1\"\r\n      >\r\n        {{ item.shortcut }}\r\n      </span>\r\n    </a>\r\n  </ng-template>\r\n</p-panelMenu>\r\n"
        },
        {
            "name": "NumoTesterComponent",
            "id": "component-NumoTesterComponent-8d6ceb647b67ec09016a4a6ddf6cf64f497f59d6efa40bf68a4624f5c9bbb6ebacbe8c3b881863a81b7208ac99a123abeaeee54149c3435ec9d7e5f202fbb305",
            "file": "projects/ngx-ui-web/src/lib/tester.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-tester",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"text-red-600 bg-black object-fill\">\n    Numo test component is working just fine, and it's\n    {{ lilText }}!\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "lilText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"numo-tester\",\r\n    standalone: true,\r\n    template: `\r\n        <div class=\"text-red-600 bg-black object-fill\">\r\n            Numo test component is working just fine, and it's\r\n            {{ lilText }}!\r\n        </div>\r\n    `,\r\n})\r\nexport class NumoTesterComponent {\r\n    @Input() lilText: string = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-4b0d4616b060c523e1c86d1e51546e27c0906ad1e89bfe2e76e1e3783abcd46335701f12f254f32360610175534b3a2aff4a1642132850f3e41863bc0c8a7137",
            "file": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<p-toast></p-toast>\n<p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { ToastModule } from \"primeng/toast\";\r\n\r\n@Component({\r\n    selector: \"p-toast-wrapper\",\r\n    imports: [ ToastModule, FormsModule, ReactiveFormsModule, ButtonModule, BrowserAnimationsModule ],\r\n    template: `\r\n    <p-toast></p-toast>\r\n    <p-button (onClick)=\"show()\" label=\"Show\"></p-button>\r\n  `,\r\n    providers: [ MessageService ]\r\n})\r\nexport class ToastComponent {\r\n    constructor(private messageService: MessageService) {\r\n    }\r\n\r\n    show() {\r\n        this.messageService.add({ severity: \"success\", summary: \"Success\", detail: \"Message Content\" });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        label: \"Mans Numo\",\r\n        expanded: false,\r\n        items: [],\r\n    },\r\n    {\r\n        label: \"Vadība\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                icon: \"pi pi-objects-column\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \" Pro Numo\",\r\n        expanded: true,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                icon: \"pi pi-objects-column\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kase\",\r\n                items: [],\r\n                icon: \"pi pi-money-bill\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Banka\",\r\n                items: [],\r\n                icon: \"pi pi-building-columns\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Noliktava\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"LoĢistika\",\r\n                icon: \"pi pi-directions\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kases sistēmas\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Realizācija\",\r\n                icon: \"pi pi-cloud-upload\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Debitoru novērtēšana\",\r\n                icon: \"pi pi-wallet\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Pamatlīdzekļi\",\r\n                icon: \"pi pi-ticket\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"PL un inventāra inventarizācija\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Algas\",\r\n                icon: \"pi pi-credit-card\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Darba laika plānošana\",\r\n                icon: \"pi pi-calendar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Avansa norēkini\",\r\n                icon: \"pi pi-receipt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Komandējumi\",\r\n                icon: \"pi pi-directions-alt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\r\n                icon: \"pi pi-money-bill\",\r\n                items: [],\r\n            },\r\n            {\r\n                label: \"Vadības grāmatvedība\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Līgumi\",\r\n                icon: \"pi pi-chart-bar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n]"
            },
            {
                "name": "UserMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        label: \"Profile\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Settings\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Logout\",\r\n        route: \"\",\r\n    },\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        label: \"Mans Numo\",\r\n        expanded: false,\r\n        items: [],\r\n    },\r\n    {\r\n        label: \"Vadība\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                icon: \"pi pi-objects-column\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \" Pro Numo\",\r\n        expanded: true,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                icon: \"pi pi-objects-column\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kase\",\r\n                items: [],\r\n                icon: \"pi pi-money-bill\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Banka\",\r\n                items: [],\r\n                icon: \"pi pi-building-columns\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Noliktava\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"LoĢistika\",\r\n                icon: \"pi pi-directions\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kases sistēmas\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Realizācija\",\r\n                icon: \"pi pi-cloud-upload\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Debitoru novērtēšana\",\r\n                icon: \"pi pi-wallet\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Pamatlīdzekļi\",\r\n                icon: \"pi pi-ticket\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"PL un inventāra inventarizācija\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Algas\",\r\n                icon: \"pi pi-credit-card\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Darba laika plānošana\",\r\n                icon: \"pi pi-calendar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Avansa norēkini\",\r\n                icon: \"pi pi-receipt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Komandējumi\",\r\n                icon: \"pi pi-directions-alt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\r\n                icon: \"pi pi-money-bill\",\r\n                items: [],\r\n            },\r\n            {\r\n                label: \"Vadības grāmatvedība\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Līgumi\",\r\n                icon: \"pi pi-chart-bar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n]"
                },
                {
                    "name": "UserMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        label: \"Profile\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Settings\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Logout\",\r\n        route: \"\",\r\n    },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumoTesterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TesterService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}