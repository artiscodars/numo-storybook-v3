{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-5427a033b24845d07012a0d838d85e252a3a7e2b169c291a45d028727297701717b9278aba6c5dc23a055ccaa221a6459f361865c69c6cb6b5d7c4ebfa62c303",
            "file": "projects/ngx-ui-web/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n    name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "TesterService",
            "id": "injectable-TesterService-1659bf4331862e3b1b9f9be14abd94913c8033bc64efadc8d54ca32d2e29cfa0637bca9ce2ad70aebae15582048cb3b5976658cb492b27d530e1906f9aceaab3",
            "file": "projects/ngx-ui-web/src/lib/tester.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "tellMeSomething",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class TesterService {\r\n    tellMeSomething(): string {\r\n        return \"Something\";\r\n    }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9bff61f732245d1519ea8ddd04137347814db13d285e9fe2304794d4f96f56aba9b77c4569965ad4ce8f2c121d0076ca4b98d946971830cc3f8caf142c7cef2d",
            "file": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-home",
            "styleUrls": [],
            "styles": [
                "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        "
            ],
            "templateUrl": [
                "./home.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "items",
                    "defaultValue": "[{ label: \"UZDEVUMI\", menu: [...Menu] }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\nimport { HeaderComponent } from \"../../components/header/header.component\";\r\nimport { DashboardComponent } from \"../dashboard/dashboard.component\";\r\nimport { Menu } from \"../../components/left-menu/menu.model\";\r\nimport { CardModule } from \"primeng/card\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { LeftMenuComponent } from \"../../components/left-menu/left-menu.component\";\r\n\r\n@Component({\r\n    selector: \"numo-home\",\r\n    standalone: true,\r\n    imports: [\r\n        RouterOutlet,\r\n        HeaderComponent,\r\n        DashboardComponent,\r\n        CardModule,\r\n        CommonModule,\r\n        LeftMenuComponent,\r\n    ],\r\n    templateUrl: \"./home.template.html\",\r\n    styles: [\r\n        `\r\n            .container {\r\n                display: flex;\r\n                grid-gap: 20px;\r\n                margin-top: 20px;\r\n            }\r\n\r\n            .menu {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                flex: 1;\r\n                max-width: 230px;\r\n                @media (max-width: var(--breakpoint)) {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .dashboard {\r\n                flex: 1;\r\n            }\r\n\r\n            :host ::ng-deep .p-card .p-card-content {\r\n                padding: 5px;\r\n            }\r\n        `,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppComponent {\r\n    isMenuVisible = false;\r\n    title = \"angular-latest\";\r\n    items = [{ label: \"UZDEVUMI\", menu: [...Menu] }];\r\n\r\n    toggleMenu(isMenuVisible: boolean) {\r\n        this.isMenuVisible = isMenuVisible;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        \n",
            "extends": [],
            "templateData": "<numo-header (menuClicked)=\"toggleMenu($event)\"></numo-header>\r\n\r\n<div class=\"container\">\r\n  @if (isMenuVisible) {\r\n      <div class=\"menu\">\r\n    @for (item of items; track $index) {\r\n        <div class=\"flex flex-column gap-3 w-full\">\r\n      <p-card class=\"border-round-lg w-full\">\r\n        <p class=\"m-0\">\r\n          <span class=\"pi pi-check-circle\"></span> {{ item.label }}\r\n        </p>\r\n      </p-card>\r\n      <numo-left-menu [items]=\"item.menu\"></numo-left-menu>\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n    <div class=\"dashboard\">\r\n    <!-- <rotuer-outlet></router-outlet -->\r\n    <numo-dashboard></numo-dashboard>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ConfirmDialogComponent",
            "id": "component-ConfirmDialogComponent-1e606f6c6f1e7f3d37d179cc144b30e241eab55729dd5e793e783e358e0833cccd1b529be0528f5f3f71714d1314f53ad008d8d45c0c97f0cd039666218cd30b",
            "file": "projects/ngx-ui-web/src/stories/components/confirm-dialog/confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-confirm-dialog-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<p-toast />\n<p-confirmDialog />\n<p-button (onClick)=\"confirm1($event)\" label=\"Save\" [outlined]=\"true\" />\n<p-button\n    (onClick)=\"confirm2($event)\"\n    label=\"Delete\"\n    severity=\"danger\"\n    [outlined]=\"true\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "confirm1",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "confirm2",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "ConfirmDialogModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\"; \r\nimport { ConfirmationService, MessageService } from \"primeng/api\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\r\nimport { ToastModule } from \"primeng/toast\";\r\n\r\n@Component({\r\n    selector: \"p-confirm-dialog-wrapper\",\r\n    imports: [\r\n        CommonModule,\r\n        ToastModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ButtonModule, \r\n        ConfirmDialogModule,\r\n    ],\r\n    template: `\r\n        <p-toast />\r\n        <p-confirmDialog />\r\n        <p-button (onClick)=\"confirm1($event)\" label=\"Save\" [outlined]=\"true\" />\r\n        <p-button\r\n            (onClick)=\"confirm2($event)\"\r\n            label=\"Delete\"\r\n            severity=\"danger\"\r\n            [outlined]=\"true\"\r\n        />\r\n    `,\r\n    standalone: true,\r\n})\r\nexport class ConfirmDialogComponent {\r\n    constructor(\r\n        private messageService: MessageService,\r\n        private confirmService: ConfirmationService,\r\n    ) {}\r\n\r\n    confirm1(event: any) {\r\n        this.confirmService.confirm({\r\n            target: event.target as EventTarget,\r\n            message: \"Are you sure that you want to proceed?\",\r\n            header: \"Confirmation\",\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            acceptIcon: \"none\",\r\n            rejectIcon: \"none\",\r\n            rejectButtonStyleClass: \"p-button-text\",\r\n            accept: () => {\r\n                this.messageService.add({\r\n                    severity: \"info\",\r\n                    summary: \"Confirmed\",\r\n                    detail: \"You have accepted\",\r\n                });\r\n            },\r\n            reject: () => {\r\n                this.messageService.add({\r\n                    severity: \"error\",\r\n                    summary: \"Rejected\",\r\n                    detail: \"You have rejected\",\r\n                    life: 3000,\r\n                });\r\n            },\r\n        });\r\n    }\r\n    confirm2(event: any) {\r\n        this.confirmService.confirm({\r\n            target: event.target as EventTarget,\r\n            message: \"Do you want to delete this record?\",\r\n            header: \"Delete Confirmation\",\r\n            icon: \"pi pi-info-circle\",\r\n            acceptButtonStyleClass: \"p-button-danger p-button-text\",\r\n            rejectButtonStyleClass: \"p-button-text p-button-text\",\r\n            acceptIcon: \"none\",\r\n            rejectIcon: \"none\",\r\n\r\n            accept: () => {\r\n                this.messageService.add({\r\n                    severity: \"info\",\r\n                    summary: \"Confirmed\",\r\n                    detail: \"Record deleted\",\r\n                });\r\n            },\r\n            reject: () => {\r\n                this.messageService.add({\r\n                    severity: \"error\",\r\n                    summary: \"Rejected\",\r\n                    detail: \"You have rejected\",\r\n                });\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-df69b887b8a88571c99d3c1a28c98912c48dc45506c0ff6b07e0325cf5b861df49965385e373ebabda50fbd42d487db1c9abc9f17f8831322bea6a05bc7a4438",
            "file": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-dashboard",
            "styleUrls": [],
            "styles": [
                "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        "
            ],
            "templateUrl": [
                "./dashboard.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"numo-dashboard\",\r\n    standalone: true,\r\n    imports: [ RouterOutlet ],\r\n    templateUrl: \"./dashboard.template.html\",\r\n    styles: [\r\n        `\r\n            .card {\r\n                background: #f4f4f4;\r\n                border-radius: 5px;\r\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n            }\r\n        `,\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n})\r\nexport class DashboardComponent {\r\n    title = \"angular-latest\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        \n",
            "extends": [],
            "templateData": "<!-- create a html div class card that has dynamic width width -->\r\n<div class=\"card flex bg-white p-4 justify-content-center border-round-lg\">\r\n    Dashboard\r\n</div>\r\n"
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-dfbcb882a2fc48459e28b1fc14f1fe2ffee31ebacf650b85c39394b6c276bb92138dc206d35b0669bbeff7c33a4ad352a643d1539d9f3169ab4ad67b57ffaaa2",
            "file": "projects/ngx-ui-web/src/stories/components/file-upload/file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "totalSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "totalSizePercent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "choose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatSize",
                    "args": [
                        {
                            "name": "bytes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "bytes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClearTemplatingUpload",
                    "args": [
                        {
                            "name": "clear",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clear",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemoveTemplatingFile",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "removeFileCallback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "removeFileCallback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectedFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTemplatedUpload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadEvent",
                    "args": [
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "FileUploadModule",
                    "type": "module"
                },
                {
                    "name": "BadgeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n    ConfirmationService,\r\n    MessageService,\r\n    PrimeNGConfig,\r\n} from \"primeng/api\";\r\nimport { BadgeModule } from \"primeng/badge\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\r\nimport { FileUploadModule } from \"primeng/fileupload\";\r\nimport { ToastModule } from \"primeng/toast\";\r\n\r\n@Component({\r\n    selector: \"p-file-upload\",\r\n    imports: [\r\n        CommonModule,\r\n        ToastModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ButtonModule,\r\n        FileUploadModule,\r\n        BadgeModule\r\n\r\n    ],\r\n    templateUrl: \"./file-upload.component.html\",\r\n    standalone: true,\r\n})\r\nexport class FileUploadComponent {\r\n    files = [];\r\n\r\n    totalSize: number = 0;\r\n\r\n    totalSizePercent: number = 0;\r\n\r\n    constructor(\r\n        private config: PrimeNGConfig,\r\n        private messageService: MessageService,\r\n    ) {}\r\n\r\n    choose(event: any, callback: any) {\r\n        callback();\r\n    }\r\n\r\n    onRemoveTemplatingFile(\r\n        event: any,\r\n        file: any,\r\n        removeFileCallback: any,\r\n        index: any,\r\n    ) {\r\n        removeFileCallback(event, index);\r\n        this.totalSize -= parseInt(this.formatSize(file.size));\r\n        this.totalSizePercent = this.totalSize / 10;\r\n    }\r\n\r\n    onClearTemplatingUpload(clear: any) {\r\n        clear();\r\n        this.totalSize = 0;\r\n        this.totalSizePercent = 0;\r\n    }\r\n\r\n    onTemplatedUpload() {\r\n        this.messageService.add({\r\n            severity: \"info\",\r\n            summary: \"Success\",\r\n            detail: \"File Uploaded\",\r\n            life: 3000,\r\n        });\r\n    }\r\n\r\n    onSelectedFiles(event: any) {\r\n        this.files = event.currentFiles;\r\n        this.files.forEach((file: any) => {\r\n            this.totalSize += parseInt(this.formatSize(file.size));\r\n        });\r\n        this.totalSizePercent = this.totalSize / 10;\r\n    }\r\n\r\n    uploadEvent(callback: any) {\r\n        callback();\r\n    }\r\n\r\n    formatSize(bytes: any) {\r\n        const k = 1024;\r\n        const dm = 3;\r\n        const sizes = this.config.translation.fileSizeTypes as any;\r\n        if (bytes === 0) {\r\n            return `0 ${sizes[0]}`;\r\n        }\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        const formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\r\n\r\n        return `${formattedSize} ${sizes[i]}`;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<p-toast />\r\n<p-fileUpload name=\"myfile[]\" url=\"https://www.primefaces.org/cdn/api/upload.php\" [multiple]=\"true\" accept=\"image/*\" maxFileSize=\"1000000\" (onUpload)=\"onTemplatedUpload()\" (onSelect)=\"onSelectedFiles($event)\">\r\n    <ng-template pTemplate=\"header\" let-files let-chooseCallback=\"chooseCallback\" let-clearCallback=\"clearCallback\" let-uploadCallback=\"uploadCallback\">\r\n        <div class=\"flex flex-wrap justify-content-between align-items-center flex-1 gap-2\">\r\n            <div class=\"flex gap-2\">\r\n                <p-button (onClick)=\"choose($event, chooseCallback)\" icon=\"pi pi-images\" [rounded]=\"true\" [outlined]=\"true\" />\r\n                <p-button (onClick)=\"uploadEvent(uploadCallback)\" icon=\"pi pi-cloud-upload\" [rounded]=\"true\" [outlined]=\"true\" severity=\"success\" [disabled]=\"!files || files.length === 0\" />\r\n                <p-button (onClick)=\"clearCallback()\" icon=\"pi pi-times\" [rounded]=\"true\" [outlined]=\"true\" severity=\"danger\" [disabled]=\"!files || files.length === 0\" />\r\n            </div>\r\n            <p-progressBar [value]=\"totalSizePercent\" [showValue]=\"false\" styleClass=\"md:w-20rem h-1rem w-full md:ml-auto\" [ngClass]=\"{ 'exceeded-progress-bar': totalSizePercent > 100 }\">\r\n                <span class=\"white-space-nowrap\">{{ totalSize }}B / 1Mb</span>\r\n            </p-progressBar>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"content\" let-files let-uploadedFiles=\"uploadedFiles\" let-removeFileCallback=\"removeFileCallback\" let-removeUploadedFileCallback=\"removeUploadedFileCallback\">\r\n        <div *ngIf=\"files?.length > 0\">\r\n            <h5>Pending</h5>\r\n            <div class=\"flex flex-wrap p-0 sm:p-5 gap-5\">\r\n                @for(file of files;track file; let index = $index){\r\n                    <div class=\"card m-0 px-6 flex flex-column border-1 surface-border align-items-center gap-3\">\r\n                        <div>\r\n                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />\r\n                        </div>\r\n                        <span class=\"font-semibold\">{{ file.name }}</span>\r\n                        <div>{{ formatSize(file.size) }}</div>\r\n                        <p-badge value=\"Pending\" severity=\"warning\" />\r\n                        <p-button icon=\"pi pi-times\" (onClick)=\"onRemoveTemplatingFile($event, file, removeFileCallback, index)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"uploadedFiles?.length > 0\">\r\n            <h5>Completed</h5>\r\n            <div class=\"flex flex-wrap p-0 sm:p-5 gap-5\">\r\n                @for(file of uploadedFiles; track file;let index = $index){\r\n                    <div class=\"card m-0 px-6 flex flex-column border-1 surface-border align-items-center gap-3\">\r\n                        <div>\r\n                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />\r\n                        </div>\r\n                        <span class=\"font-semibold\">{{ file.name }}</span>\r\n                        <div>{{ formatSize(file.size) }}</div>\r\n                        <p-badge value=\"Completed\" class=\"mt-3\" severity=\"success\" />\r\n                        <p-button icon=\"pi pi-times\" (onClick)=\"removeUploadedFileCallback(index)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"file\"> </ng-template>\r\n    <ng-template pTemplate=\"empty\">\r\n        <div class=\"flex align-items-center justify-content-center flex-column\">\r\n            <i class=\"pi pi-cloud-upload border-2 border-circle p-5 text-8xl text-400 border-400\"></i>\r\n            <p class=\"mt-4 mb-0\">Drag and drop files here to upload.</p>\r\n        </div>\r\n    </ng-template>\r\n</p-fileUpload>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cde12d75cd21261343b52ebe8ce4c912790cec650cdc516883098ac3494b7669f0211666a6a3f36d4f2d43a6941e2f737dd7e10f3b5f8fbb4425894cc13d3f80",
            "file": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isStoryBook",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClicked",
                    "defaultValue": "new EventEmitter(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "BreakPoint",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "items",
                    "defaultValue": "[...Menu]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "storyMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'storyMenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "UserMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "OverlayPanelModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport {\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { InputTextModule } from \"primeng/inputtext\";\r\nimport { MenuModule } from \"primeng/menu\";\r\nimport { Menu, UserMenuItems } from \"../left-menu/menu.model\";\r\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\r\nimport { LeftMenuComponent } from \"../left-menu/left-menu.component\";\r\n\r\n@Component({\r\n    selector: \"numo-header\",\r\n    standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        InputTextModule,\r\n        MenuModule,\r\n        OverlayPanelModule,\r\n        LeftMenuComponent,\r\n    ],\r\n    templateUrl: \"./header.template.html\",\r\n    styles: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class HeaderComponent {\r\n    isMenuVisible = false;\r\n    @Input() isStoryBook = false;\r\n    @ViewChild(\"menu\") menu: any;\r\n    @ViewChild(\"storyMenu\") storyMenu: any;\r\n    @Output() menuClicked = new EventEmitter(false);\r\n    items = [...Menu];\r\n    userMenuItems = UserMenuItems;\r\n    BreakPoint = 1024;\r\n\r\n    toggleMenu(event: Event) {\r\n        this.isMenuVisible = !this.isMenuVisible;\r\n        if (this.isStoryBook) {\r\n            this.storyMenu.toggle(event);\r\n            return;\r\n        }\r\n        if (window.innerWidth < this.BreakPoint) {\r\n            this.menu.toggle(event);\r\n            this.isMenuVisible = false;\r\n        }\r\n        this.menuClicked.emit(this.isMenuVisible);\r\n    }\r\n\r\n    closeMenu() {\r\n        this.isMenuVisible = false;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header flex justify-content-between items-center p-2 text-white\">\r\n    <div class=\"logo flex items-center font-bold text-2xl h-10\">\r\n        <div>\r\n            <span\r\n                #menuButton\r\n                (click)=\"toggleMenu($event)\"\r\n                class=\"pi pi-bars icon text-gray-800 cursor-pointer\"\r\n            ></span>\r\n\r\n            <p-overlayPanel #menu>\r\n                <div class=\"flex flex-column gap-3\">\r\n                    <numo-left-menu [items]=\"items\"></numo-left-menu>\r\n                </div>\r\n            </p-overlayPanel>\r\n            <p-overlayPanel #storyMenu>\r\n                <div class=\"flex flex-column gap-3\">\r\n                    <numo-left-menu [items]=\"items\"></numo-left-menu>\r\n                </div>\r\n            </p-overlayPanel>\r\n        </div>\r\n        <img class=\"ml-3\" height=\"30\" src=\"logo.png\" alt=\"logo\" />\r\n    </div>\r\n    <div class=\"flex justify-center mx-5 relative\">\r\n        <div class=\"flex justify-center w-full max-w-[500px] relative\">\r\n            <span\r\n                style=\"top: 8px; left: 12px\"\r\n                class=\"pi pi-search icon text-gray-800 absolute top-[15px] left-[12px]\"\r\n            ></span>\r\n\r\n            <input\r\n                type=\"text\"\r\n                style=\"text-indent: 35px\"\r\n                class=\"text-gray-800 p-0 pl-10\"\r\n                pInputText\r\n            />\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\" inline-block\">\r\n            <span\r\n                class=\"flex cursor-pointer text-gray-800 relative gap-2 align-items-center justify-content-between\"\r\n                (click)=\"userMenu.toggle($event)\"\r\n            >\r\n                <i class=\"text-gray-800 pi pi-bell\"></i>\r\n\r\n                Username</span\r\n            >\r\n        </div>\r\n        <p-menu #userMenu [model]=\"userMenuItems\" [popup]=\"true\" />\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-c0abb44e62536de0b170b62ee29eeef265a0001968b91fe96c47522f2a235148da9e53bd8ca33e59e26be99519e748be94415b670225df2ea3be7ad017aca8e6",
            "file": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"text-gray-800\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primeng\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"iconify\" | \"primeng\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: \"numo-icon\",\r\n    templateUrl: \"./icon.template.html\",\r\n    standalone: true,\r\n    imports: [CommonModule],\r\n})\r\nexport class IconComponent {\r\n    @Input() icon!: string;\r\n    @Input() type: \"iconify\" | \"primeng\" = \"primeng\";\r\n    @Input() class: string = \"text-gray-800\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<span\r\n    *ngIf=\"type === 'primeng'\"\r\n    class=\"pi\"\r\n    [ngClass]=\"icon\"\r\n    [class]=\"class\"\r\n></span>\r\n<span\r\n    *ngIf=\"type === 'iconify'\"\r\n    class=\"iconify\"\r\n    [attr.data-icon]=\"icon\"\r\n    [class]=\"class\"\r\n></span>\r\n"
        },
        {
            "name": "LeftMenuComponent",
            "id": "component-LeftMenuComponent-4d4a6f2875966a394c41468ba25b4d24727365587d8e860b7f44768c148dc23c0c5985dca7d164d81f6f1c5d4b281a670e21e27791ad0ec09c9614b5700da8fa",
            "file": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-left-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./left-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PanelMenuModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { PanelMenuModule } from \"primeng/panelmenu\";\r\nimport { IconComponent } from \"../icon/icon.component\";\r\n\r\n@Component({\r\n    selector: \"numo-left-menu\",\r\n    standalone: true,\r\n    imports: [FormsModule, CommonModule, PanelMenuModule, IconComponent],\r\n    templateUrl: \"./left-menu.component.html\",\r\n    styles: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class LeftMenuComponent {\r\n    @Input() items: any = [];\r\n    @Input() className = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-panelMenu [model]=\"items\" [styleClass]=\"className\">\r\n    <ng-template pTemplate=\"item\" let-item>\r\n        <a pRipple class=\"flex align-items-center px-3 py-2 cursor-pointer\">\r\n            <numo-icon\r\n                [icon]=\"item.icon\"\r\n                [type]=\"item.type\"\r\n                class=\"text-2xl flex align-items-center\"\r\n            ></numo-icon>\r\n            <span class=\"ml-2\">\r\n                {{ item.label }}\r\n            </span>\r\n            <span\r\n                *ngIf=\"item.shortcut\"\r\n                class=\"ml-auto border-1 surface-border border-round surface-100 text-xs p-1\"\r\n            >\r\n                {{ item.shortcut }}\r\n            </span>\r\n        </a>\r\n    </ng-template>\r\n</p-panelMenu>\r\n"
        },
        {
            "name": "NumoTesterComponent",
            "id": "component-NumoTesterComponent-8d6ceb647b67ec09016a4a6ddf6cf64f497f59d6efa40bf68a4624f5c9bbb6ebacbe8c3b881863a81b7208ac99a123abeaeee54149c3435ec9d7e5f202fbb305",
            "file": "projects/ngx-ui-web/src/lib/tester.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-tester",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"text-red-600 bg-black object-fill\">\n    Numo test component is working just fine, and it's\n    {{ lilText }}!\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "lilText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"numo-tester\",\r\n    standalone: true,\r\n    template: `\r\n        <div class=\"text-red-600 bg-black object-fill\">\r\n            Numo test component is working just fine, and it's\r\n            {{ lilText }}!\r\n        </div>\r\n    `,\r\n})\r\nexport class NumoTesterComponent {\r\n    @Input() lilText: string = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-85a9487ac6fe75175c9f946947bfbdc3de2ca138eefea91742d026355d466b6d801cbcaceb51f4b61c648c1b7d1dbb15c84f3647c8bb0b28a311fef9f546b6db",
            "file": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<p-toast></p-toast>\n<p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { ToastModule } from \"primeng/toast\";\r\n\r\n@Component({\r\n    selector: \"p-toast-wrapper\",\r\n    imports: [\r\n        ToastModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ButtonModule, \r\n    ],\r\n    template: `\r\n        <p-toast></p-toast>\r\n        <p-button (onClick)=\"show()\" label=\"Show\"></p-button>\r\n    `,\r\n    providers: [MessageService],\r\n    standalone: true,\r\n})\r\nexport class ToastComponent {\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    show() {\r\n        this.messageService.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Message Content\",\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-69fb0eb3a30f33ba8b59e78c27375fb785e52e4d0860aaa2284fd5b6a003d0efe23740198c00ba451412941e0167205e7532d482c0617ab1b1249d0b40531030",
            "file": "projects/ngx-ui-web/src/stories/components/tree/tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-tree-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "files",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TreeNode[]",
                    "decorators": []
                },
                {
                    "name": "lazyLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TreeNode",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "nodes2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "duplicateData",
                    "args": [
                        {
                            "name": "data",
                            "type": "TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initiateNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initiateNodes2",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapse",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpand",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeUnselect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpand",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpand2",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TreeModule",
                    "type": "module"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { ChangeDetectorRef, Component, Input } from \"@angular/core\";\r\nimport { MessageService, TreeNode } from \"primeng/api\";\r\nimport { ToastModule } from \"primeng/toast\";\r\nimport { TreeModule } from \"primeng/tree\";\r\n\r\n@Component({\r\n    selector: \"p-tree-wrapper\",\r\n    templateUrl: \"./tree.component.html\",\r\n    standalone: true,\r\n    imports: [TreeModule, ToastModule,CommonModule],\r\n    providers: [MessageService],\r\n})\r\nexport class TreeComponent {\r\n    @Input() files!: TreeNode[];\r\n    @Input() selectedFile!: TreeNode;\r\n    @Input() events: boolean = false;\r\n    @Input() lazyLoading: boolean = false;\r\n    @Input() virtualScroll: boolean = false;\r\n\r\n    constructor(private messageService: MessageService,private cd: ChangeDetectorRef) {}\r\n\r\n    loading: boolean = false;\r\n\r\n    nodes!: TreeNode[];\r\n\r\n    nodes2!: TreeNode[]; \r\n    ngOnInit() {\r\n        this.loading = true;\r\n        this.nodes2 = this.initiateNodes2();\r\n\r\n        setTimeout(() => {\r\n            this.nodes = this.initiateNodes();\r\n            this.loading = false;\r\n            this.nodes2.map((node) => (node.loading = false));\r\n            this.cd.markForCheck();\r\n        }, 2000);\r\n        this.files = this.duplicateData(this.files, 50);\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    duplicateData(data: TreeNode[], count: number): TreeNode[] {\r\n        let duplicatedData: TreeNode[] = [];\r\n        for (let i = 0; i < count; i++) {\r\n            duplicatedData = [...duplicatedData, ...data.map((item) => ({ ...item }))];\r\n        }\r\n        return duplicatedData;\r\n    }\r\n    nodeExpand(event: any) {\r\n        this.messageService.add({\r\n            severity: \"success\",\r\n            summary: \"Node Expanded\",\r\n            detail: event.node.label,\r\n        });\r\n    }\r\n\r\n    nodeCollapse(event: any) {\r\n        this.messageService.add({\r\n            severity: \"warn\",\r\n            summary: \"Node Collapsed\",\r\n            detail: event.node.label,\r\n        });\r\n    }\r\n\r\n    nodeSelect(event: any) {\r\n        this.messageService.add({\r\n            severity: \"info\",\r\n            summary: \"Node Selected\",\r\n            detail: event.node.label,\r\n        });\r\n    }\r\n\r\n    nodeUnselect(event: any) {\r\n        this.messageService.add({\r\n            severity: \"info\",\r\n            summary: \"Node Unselected\",\r\n            detail: event.node.label,\r\n        });\r\n    }\r\n    initiateNodes(): TreeNode[] {\r\n        return [\r\n            {\r\n                key: '0',\r\n                label: 'Node 0',\r\n                leaf: false\r\n            },\r\n            {\r\n                key: '1',\r\n                label: 'Node 1',\r\n                leaf: false\r\n            },\r\n            {\r\n                key: '2',\r\n                label: 'Node 2',\r\n                leaf: false\r\n            }\r\n        ];\r\n    }\r\n\r\n    initiateNodes2(): TreeNode[] {\r\n        return [\r\n            {\r\n                key: '0',\r\n                label: 'Node 0',\r\n                leaf: false,\r\n                loading: true\r\n            },\r\n            {\r\n                key: '1',\r\n                label: 'Node 1',\r\n                leaf: false,\r\n                loading: true\r\n            },\r\n            {\r\n                key: '2',\r\n                label: 'Node 2',\r\n                leaf: false,\r\n                loading: true\r\n            }\r\n        ];\r\n    }\r\n\r\n    onNodeExpand(event: any) {\r\n        if (!event.node.children) {\r\n            this.loading = true;\r\n\r\n            setTimeout(() => {\r\n                let _node = { ...event.node };\r\n                _node.children = [];\r\n\r\n                for (let i = 0; i < 3; i++) {\r\n                    _node.children.push({\r\n                        key: event.node.key + '-' + i,\r\n                        label: 'Lazy ' + event.node.label + '-' + i\r\n                    });\r\n                }\r\n\r\n                this.nodes[parseInt(event.node.key, 10)] = _node;\r\n\r\n                this.loading = false;\r\n                this.cd.markForCheck();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    onNodeExpand2(event: any) {\r\n        if (!event.node.children) {\r\n            event.node.loading = true;\r\n\r\n            setTimeout(() => {\r\n                let _node = { ...event.node };\r\n                _node.children = [];\r\n\r\n                for (let i = 0; i < 3; i++) {\r\n                    _node.children.push({\r\n                        key: event.node.key + '-' + i,\r\n                        label: 'Lazy ' + event.node.label + '-' + i\r\n                    });\r\n                }\r\n\r\n                const key = parseInt(_node.key, 10);\r\n                this.nodes2[key] = { ..._node, loading: false };\r\n                this.cd.markForCheck();\r\n            }, 500);\r\n        }\r\n    }\r\n}\r\n\r\n ",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "@if (events) {\r\n    <div class=\"card flex justify-content-center\">\r\n        <p-toast />\r\n        <p-tree\r\n            [value]=\"files\"\r\n            class=\"w-full md:w-30rem\"\r\n            selectionMode=\"single\"\r\n            [(selection)]=\"selectedFile\"\r\n            (onNodeExpand)=\"nodeExpand($event)\"\r\n            (onNodeCollapse)=\"nodeCollapse($event)\"\r\n            (onNodeSelect)=\"nodeSelect($event)\"\r\n            (onNodeUnselect)=\"nodeUnselect($event)\"\r\n        />\r\n    </div>\r\n}\r\n\r\n@if(lazyLoading){\r\n    <div class=\"card flex flex-wrap p-fluid gap-3\">\r\n        <div class=\"flex-auto md:flex md:justify-content-start md:align-items-center flex-column\">\r\n            <label for=\"mask\" class=\"font-bold block mb-2\">Mask Mode</label>\r\n            <p-tree \r\n                class=\"w-full md:w-30rem\" \r\n                [value]=\"nodes\" \r\n                (onNodeExpand)=\"onNodeExpand($event)\" \r\n                [loading]=\"loading\" />\r\n        </div>\r\n        <div class=\"flex-auto md:flex md:justify-content-start md:align-items-center flex-column\">\r\n            <label for=\"icon\" class=\"font-bold block mb-2\">Icon Mode</label>\r\n            <p-tree \r\n                class=\"w-full md:w-30rem\" \r\n                [value]=\"nodes2\" \r\n                loadingMode=\"icon\" \r\n                (onNodeExpand)=\"onNodeExpand2($event)\" />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n@if(virtualScroll){\r\n    <p-tree \r\n    class=\"w-full md:w-30rem\" \r\n    scrollHeight=\"250px\" \r\n    [virtualScroll]=\"true\" \r\n    [virtualScrollItemSize]=\"46\" \r\n    [value]=\"files\" />\r\n}"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "commonFiles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        key: \"0\",\r\n        label: \"Documents\",\r\n        data: \"Documents Folder\",\r\n        icon: \"pi pi-fw pi-inbox\",\r\n        children: [\r\n            {\r\n                key: \"0-0\",\r\n                label: \"Work\",\r\n                data: \"Work Folder\",\r\n                icon: \"pi pi-fw pi-cog\",\r\n                children: [\r\n                    {\r\n                        key: \"0-0-0\",\r\n                        label: \"Expenses.doc\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Expenses Document\",\r\n                    },\r\n                    {\r\n                        key: \"0-0-1\",\r\n                        label: \"Resume.doc\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Resume Document\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"0-1\",\r\n                label: \"Home\",\r\n                data: \"Home Folder\",\r\n                icon: \"pi pi-fw pi-home\",\r\n                children: [\r\n                    {\r\n                        key: \"0-1-0\",\r\n                        label: \"Invoices.txt\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Invoices for this month\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"1\",\r\n        label: \"Events\",\r\n        data: \"Events Folder\",\r\n        icon: \"pi pi-fw pi-calendar\",\r\n        children: [\r\n            {\r\n                key: \"1-0\",\r\n                label: \"Meeting\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Meeting\",\r\n            },\r\n            {\r\n                key: \"1-1\",\r\n                label: \"Product Launch\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Product Launch\",\r\n            },\r\n            {\r\n                key: \"1-2\",\r\n                label: \"Report Review\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Report Review\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"2\",\r\n        label: \"Movies\",\r\n        data: \"Movies Folder\",\r\n        icon: \"pi pi-fw pi-star-fill\",\r\n        children: [\r\n            {\r\n                key: \"2-0\",\r\n                icon: \"pi pi-fw pi-star-fill\",\r\n                label: \"Al Pacino\",\r\n                data: \"Pacino Movies\",\r\n                children: [\r\n                    {\r\n                        key: \"2-0-0\",\r\n                        label: \"Scarface\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Scarface Movie\",\r\n                    },\r\n                    {\r\n                        key: \"2-0-1\",\r\n                        label: \"Serpico\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Serpico Movie\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"2-1\",\r\n                label: \"Robert De Niro\",\r\n                icon: \"pi pi-fw pi-star-fill\",\r\n                data: \"De Niro Movies\",\r\n                children: [\r\n                    {\r\n                        key: \"2-1-0\",\r\n                        label: \"Goodfellas\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Goodfellas Movie\",\r\n                    },\r\n                    {\r\n                        key: \"2-1-1\",\r\n                        label: \"Untouchables\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Untouchables Movie\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n]"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        label: \"Mans Numo\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \"Vadība\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \" Pro Numo\",\r\n        expanded: true,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kase\",\r\n                items: [],\r\n                icon: \"pi pi-money-bill\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Banka\",\r\n                items: [],\r\n                icon: \"pi pi-building-columns\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Noliktava\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"LoĢistika\",\r\n                icon: \"pi pi-directions\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kases sistēmas\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Realizācija\",\r\n                icon: \"pi pi-cloud-upload\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Debitoru novērtēšana\",\r\n                icon: \"pi pi-wallet\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Pamatlīdzekļi\",\r\n                icon: \"pi pi-ticket\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"PL un inventāra inventarizācija\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Algas\",\r\n                icon: \"pi pi-credit-card\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Darba laika plānošana\",\r\n                icon: \"pi pi-calendar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Avansa norēkini\",\r\n                icon: \"pi pi-receipt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Komandējumi\",\r\n                icon: \"pi pi-directions-alt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\r\n                icon: \"pi pi-money-bill\",\r\n                items: [],\r\n            },\r\n            {\r\n                label: \"Vadības grāmatvedība\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Līgumi\",\r\n                icon: \"pi pi-chart-bar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n]"
            },
            {
                "name": "templateNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        key: \"0\",\r\n        label: \"Introduction\",\r\n        children: [\r\n            {\r\n                key: \"0-0\",\r\n                label: \"What is Angular\",\r\n                data: \"https://angular.io\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-1\",\r\n                label: \"Getting Started\",\r\n                data: \"https://angular.io/guide/setup-local\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-2\",\r\n                label: \"Learn and Explore\",\r\n                data: \"https://angular.io/guide/architecture\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-3\",\r\n                label: \"Take a Look\",\r\n                data: \"https://angular.io/start\",\r\n                type: \"url\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"1\",\r\n        label: \"Components In-Depth\",\r\n        children: [\r\n            {\r\n                key: \"1-0\",\r\n                label: \"Component Registration\",\r\n                data: \"https://angular.io/guide/component-interaction\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-1\",\r\n                label: \"User Input\",\r\n                data: \"https://angular.io/guide/user-input\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-2\",\r\n                label: \"Hooks\",\r\n                data: \"https://angular.io/guide/lifecycle-hooks\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-3\",\r\n                label: \"Attribute Directives\",\r\n                data: \"https://angular.io/guide/attribute-directives\",\r\n                type: \"url\",\r\n            },\r\n        ],\r\n    },\r\n]"
            },
            {
                "name": "UserMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        label: \"Profile\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Settings\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Logout\",\r\n        route: \"\",\r\n    },\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts": [
                {
                    "name": "commonFiles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        key: \"0\",\r\n        label: \"Documents\",\r\n        data: \"Documents Folder\",\r\n        icon: \"pi pi-fw pi-inbox\",\r\n        children: [\r\n            {\r\n                key: \"0-0\",\r\n                label: \"Work\",\r\n                data: \"Work Folder\",\r\n                icon: \"pi pi-fw pi-cog\",\r\n                children: [\r\n                    {\r\n                        key: \"0-0-0\",\r\n                        label: \"Expenses.doc\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Expenses Document\",\r\n                    },\r\n                    {\r\n                        key: \"0-0-1\",\r\n                        label: \"Resume.doc\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Resume Document\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"0-1\",\r\n                label: \"Home\",\r\n                data: \"Home Folder\",\r\n                icon: \"pi pi-fw pi-home\",\r\n                children: [\r\n                    {\r\n                        key: \"0-1-0\",\r\n                        label: \"Invoices.txt\",\r\n                        icon: \"pi pi-fw pi-file\",\r\n                        data: \"Invoices for this month\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"1\",\r\n        label: \"Events\",\r\n        data: \"Events Folder\",\r\n        icon: \"pi pi-fw pi-calendar\",\r\n        children: [\r\n            {\r\n                key: \"1-0\",\r\n                label: \"Meeting\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Meeting\",\r\n            },\r\n            {\r\n                key: \"1-1\",\r\n                label: \"Product Launch\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Product Launch\",\r\n            },\r\n            {\r\n                key: \"1-2\",\r\n                label: \"Report Review\",\r\n                icon: \"pi pi-fw pi-calendar-plus\",\r\n                data: \"Report Review\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"2\",\r\n        label: \"Movies\",\r\n        data: \"Movies Folder\",\r\n        icon: \"pi pi-fw pi-star-fill\",\r\n        children: [\r\n            {\r\n                key: \"2-0\",\r\n                icon: \"pi pi-fw pi-star-fill\",\r\n                label: \"Al Pacino\",\r\n                data: \"Pacino Movies\",\r\n                children: [\r\n                    {\r\n                        key: \"2-0-0\",\r\n                        label: \"Scarface\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Scarface Movie\",\r\n                    },\r\n                    {\r\n                        key: \"2-0-1\",\r\n                        label: \"Serpico\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Serpico Movie\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"2-1\",\r\n                label: \"Robert De Niro\",\r\n                icon: \"pi pi-fw pi-star-fill\",\r\n                data: \"De Niro Movies\",\r\n                children: [\r\n                    {\r\n                        key: \"2-1-0\",\r\n                        label: \"Goodfellas\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Goodfellas Movie\",\r\n                    },\r\n                    {\r\n                        key: \"2-1-1\",\r\n                        label: \"Untouchables\",\r\n                        icon: \"pi pi-fw pi-video\",\r\n                        data: \"Untouchables Movie\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n]"
                },
                {
                    "name": "templateNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        key: \"0\",\r\n        label: \"Introduction\",\r\n        children: [\r\n            {\r\n                key: \"0-0\",\r\n                label: \"What is Angular\",\r\n                data: \"https://angular.io\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-1\",\r\n                label: \"Getting Started\",\r\n                data: \"https://angular.io/guide/setup-local\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-2\",\r\n                label: \"Learn and Explore\",\r\n                data: \"https://angular.io/guide/architecture\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"0-3\",\r\n                label: \"Take a Look\",\r\n                data: \"https://angular.io/start\",\r\n                type: \"url\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: \"1\",\r\n        label: \"Components In-Depth\",\r\n        children: [\r\n            {\r\n                key: \"1-0\",\r\n                label: \"Component Registration\",\r\n                data: \"https://angular.io/guide/component-interaction\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-1\",\r\n                label: \"User Input\",\r\n                data: \"https://angular.io/guide/user-input\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-2\",\r\n                label: \"Hooks\",\r\n                data: \"https://angular.io/guide/lifecycle-hooks\",\r\n                type: \"url\",\r\n            },\r\n            {\r\n                key: \"1-3\",\r\n                label: \"Attribute Directives\",\r\n                data: \"https://angular.io/guide/attribute-directives\",\r\n                type: \"url\",\r\n            },\r\n        ],\r\n    },\r\n]"
                }
            ],
            "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        label: \"Mans Numo\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \"Vadība\",\r\n        expanded: false,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        label: \" Pro Numo\",\r\n        expanded: true,\r\n        items: [\r\n            {\r\n                label: \"Darbvirsma\",\r\n                items: [],\r\n                type: \"iconify\",\r\n                icon: \"ic:round-dashboard\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Virsgrāmata\",\r\n                items: [],\r\n                icon: \"pi pi-book\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kase\",\r\n                items: [],\r\n                icon: \"pi pi-money-bill\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Banka\",\r\n                items: [],\r\n                icon: \"pi pi-building-columns\",\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Noliktava\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"LoĢistika\",\r\n                icon: \"pi pi-directions\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Kases sistēmas\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Realizācija\",\r\n                icon: \"pi pi-cloud-upload\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Debitoru novērtēšana\",\r\n                icon: \"pi pi-wallet\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Pamatlīdzekļi\",\r\n                icon: \"pi pi-ticket\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"PL un inventāra inventarizācija\",\r\n                icon: \"pi pi-warehouse\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Algas\",\r\n                icon: \"pi pi-credit-card\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Darba laika plānošana\",\r\n                icon: \"pi pi-calendar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Avansa norēkini\",\r\n                icon: \"pi pi-receipt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Komandējumi\",\r\n                icon: \"pi pi-directions-alt\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\r\n                icon: \"pi pi-money-bill\",\r\n                items: [],\r\n            },\r\n            {\r\n                label: \"Vadības grāmatvedība\",\r\n                icon: \"pi pi-briefcase\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n            {\r\n                label: \"Līgumi\",\r\n                icon: \"pi pi-chart-bar\",\r\n                items: [],\r\n                route: \"\",\r\n            },\r\n        ],\r\n    },\r\n]"
                },
                {
                    "name": "UserMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        label: \"Profile\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Settings\",\r\n        route: \"\",\r\n    },\r\n    {\r\n        label: \"Logout\",\r\n        route: \"\",\r\n    },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumoTesterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TesterService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/confirm-dialog/confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commonFiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/tree/tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}