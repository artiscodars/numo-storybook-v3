{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-5d353b8c1d225e09f14cb588106aea8057b34b050c75354fa9039782cec86bb235c040a5681e1ccc2d9cd6b27bf3ff534657d9fb26f88fec737b061184ac3489",
            "file": "projects/ngx-ui-web/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "TesterService",
            "id": "injectable-TesterService-c6253e433e6a3dd228e0902725bdf7363983c63e5501d209779b83aab2caee6041f4288201cd10797213295e5e688c56ef2131b4c50e4d808f9a7b439d715ce5",
            "file": "projects/ngx-ui-web/src/lib/tester.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "tellMeSomething",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TesterService {\n    tellMeSomething(): string {\n        return \"Something\";\n    }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-57d8189c3be571e4e5a09c82598a3cc19975ed193d6a0b0c123845bb5189dccca43a923ae364febb1e6333ca5b9125147ee3c3783043c59ae3f288db2f5e3959",
            "file": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-home",
            "styleUrls": [],
            "styles": [
                "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        "
            ],
            "templateUrl": [
                "./home.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "items",
                    "defaultValue": "[ { label: \"UZDEVUMI\", menu: [ ...Menu ] } ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isMenuVisible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { HeaderComponent } from \"../../components/header/header.component\";\nimport { DashboardComponent } from \"../dashboard/dashboard.component\";\nimport { Menu } from \"../../components/menu/menu.model\";\nimport { CardModule } from \"primeng/card\";\nimport { CommonModule } from \"@angular/common\";\nimport { LeftMenuComponent } from \"../../components/left-menu/left-menu.component\";\n\n@Component({\n    selector: \"numo-home\",\n    standalone: true,\n    imports: [\n        RouterOutlet,\n        HeaderComponent,\n        DashboardComponent,\n        CardModule,\n        CommonModule,\n        LeftMenuComponent,\n    ],\n    templateUrl: \"./home.template.html\",\n    styles: [\n        `\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        `,\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class AppComponent {\n    isMenuVisible = false;\n    title = \"angular-latest\";\n    items = [ { label: \"UZDEVUMI\", menu: [ ...Menu ] } ];\n\n    toggleMenu(isMenuVisible: boolean) {\n        this.isMenuVisible = isMenuVisible;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .container {\n                display: flex;\n                grid-gap: 20px;\n                margin-top: 20px;\n            }\n\n            .menu {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                flex: 1;\n                max-width: 230px;\n                @media (max-width: var(--breakpoint)) {\n                    display: none;\n                }\n            }\n\n            .dashboard {\n                flex: 1;\n            }\n\n            :host ::ng-deep .p-card .p-card-content {\n                padding: 5px;\n            }\n        \n",
            "extends": [],
            "templateData": "<numo-header (menuClicked)=\"toggleMenu($event)\"></numo-header>\n\n<div class=\"container\">\n  @if (isMenuVisible) {\n      <div class=\"menu\">\n    @for (item of items; track $index) {\n        <div class=\"flex flex-column gap-3 w-full\">\n      <p-card class=\"border-round-lg w-full\">\n        <p class=\"m-0\">\n          <span class=\"pi pi-check-circle\"></span> {{ item.label }}\n        </p>\n      </p-card>\n      <numo-left-menu [items]=\"item.menu\"></numo-left-menu>\n    </div>\n    }\n  </div>\n  }\n    <div class=\"dashboard\">\n    <!-- <rotuer-outlet></router-outlet -->\n    <numo-dashboard></numo-dashboard>\n  </div>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-b3597fc77b4128b4d805a1375d9c857e91f6c54cde72f1d5a838a44b5868d5461bf52ab328c8e71c920e281638e9c0e5f867f07fa19a9672df2714a85426b642",
            "file": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-dashboard",
            "styleUrls": [],
            "styles": [
                "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        "
            ],
            "templateUrl": [
                "./dashboard.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"angular-latest\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\n\n@Component({\n    selector: \"numo-dashboard\",\n    standalone: true,\n    imports: [ RouterOutlet ],\n    templateUrl: \"./dashboard.template.html\",\n    styles: [\n        `\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class DashboardComponent {\n    title = \"angular-latest\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .card {\n                background: #f4f4f4;\n                border-radius: 5px;\n                box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\n            }\n        \n",
            "extends": [],
            "templateData": "<!-- create a html div class card that has dynamic width width -->\n<div class=\"card flex bg-white p-4 justify-content-center border-round-lg\">\n    Dashboard\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-dbc53bc9febb05dcb466a3d40195d7fa8e851f40fb0475ecc36ff9e842240c99bf99ed4d01f607647c553f97659d241d2b37af4fe1f70826bd1fd578d9a1dc7a",
            "file": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isStoryBook",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClicked",
                    "defaultValue": "new EventEmitter(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "BreakPoint",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "items",
                    "defaultValue": "[ ...Menu ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "storyMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'storyMenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "UserMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "OverlayPanelModule",
                    "type": "module"
                },
                {
                    "name": "LeftMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport {\n    Component,\n    CUSTOM_ELEMENTS_SCHEMA,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { MenuModule } from \"primeng/menu\";\nimport { Menu, UserMenuItems } from \"../menu/menu.model\";\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\nimport { LeftMenuComponent } from \"../left-menu/left-menu.component\";\n\n@Component({\n    selector: \"numo-header\",\n    standalone: true,\n    imports: [\n        FormsModule,\n        CommonModule,\n        InputTextModule,\n        MenuModule,\n        OverlayPanelModule,\n        LeftMenuComponent,\n    ],\n    templateUrl: \"./header.template.html\",\n    styles: [],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class HeaderComponent {\n    isMenuVisible = false;\n    @Input() isStoryBook = false;\n    @ViewChild(\"menu\") menu: any;\n    @ViewChild(\"storyMenu\") storyMenu: any;\n    @Output() menuClicked = new EventEmitter(false);\n    items = [ ...Menu ];\n    userMenuItems = UserMenuItems;\n    BreakPoint = 1024;\n\n    toggleMenu(event: Event) {\n        this.isMenuVisible = !this.isMenuVisible;\n        if (this.isStoryBook) {\n            this.storyMenu.toggle(event);\n            return;\n        }\n        if (window.innerWidth < this.BreakPoint) {\n            this.menu.toggle(event);\n            this.isMenuVisible = false;\n        }\n        this.menuClicked.emit(this.isMenuVisible);\n    }\n\n    closeMenu() {\n        this.isMenuVisible = false;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header flex justify-content-between items-center p-2 text-white\">\n    <div class=\"logo flex items-center font-bold text-2xl h-10\">\n        <div>\n            <span\n                #menuButton\n                (click)=\"toggleMenu($event)\"\n                class=\"pi pi-bars icon text-gray-800 cursor-pointer\"\n            ></span>\n\n            <p-overlayPanel #menu>\n                <div class=\"flex flex-column gap-3\">\n                    <numo-left-menu [items]=\"items\"></numo-left-menu>\n                </div>\n            </p-overlayPanel>\n            <p-overlayPanel #storyMenu>\n                <div class=\"flex flex-column gap-3\">\n                    <numo-left-menu [items]=\"items\"></numo-left-menu>\n                </div>\n            </p-overlayPanel>\n        </div>\n        <img class=\"ml-3\" height=\"30\" src=\"logo.png\" alt=\"logo\" />\n    </div>\n    <div class=\"flex justify-center mx-5 relative\">\n        <div class=\"flex justify-center w-full max-w-[500px] relative\">\n            <span\n                style=\"top: 8px; left: 12px\"\n                class=\"pi pi-search icon text-gray-800 absolute top-[15px] left-[12px]\"\n            ></span>\n\n            <input\n                type=\"text\"\n                style=\"text-indent: 35px\"\n                class=\"text-gray-800 p-0 pl-10\"\n                pInputText\n            />\n        </div>\n    </div>\n    <div>\n        <div class=\" inline-block\">\n            <span\n                class=\"flex cursor-pointer text-gray-800 relative gap-2 align-items-center justify-content-between\"\n                (click)=\"userMenu.toggle($event)\"\n            >\n                <i class=\"text-gray-800 pi pi-bell\"></i>\n\n                Username</span\n            >\n        </div>\n        <p-menu #userMenu [model]=\"userMenuItems\" [popup]=\"true\" />\n    </div>\n</div>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-693bfb596a7c04d516431afd9956c851e48e45762cfb72d8bc55b6e22dbfb66cde528f87826ebf78eb4ece285aa73fd780985edd3d6f0087a9f990d7014d49a6",
            "file": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.template.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"text-gray-800\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primeng\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"iconify\" | \"primeng\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\n\n@Component({\n    selector: \"numo-icon\",\n    templateUrl: \"./icon.template.html\",\n    standalone: true,\n    imports: [],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class IconComponent {\n    @Input() icon!: string;\n    @Input() type: \"iconify\" | \"primeng\" = \"primeng\";\n    @Input() class: string = \"text-gray-800\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (type === 'iconify') {\n    <iconify-icon icon=\"{{ icon }}\" [ngClass]=\"class\"></iconify-icon>\n}\n"
        },
        {
            "name": "LeftMenuComponent",
            "id": "component-LeftMenuComponent-002e545280578e0620b1d1566c0a6e6a55558a6cd6edee57f7a7dc78c0890d8080bb5fa012f43e2eb72ce2bc57b3e609554a7f3cb9dc5a8342835ef82e6ca8bf",
            "file": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-left-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./left-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PanelMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PanelMenuModule } from \"primeng/panelmenu\";\n\n@Component({\n    selector: \"numo-left-menu\",\n    standalone: true,\n    imports: [ FormsModule, CommonModule, PanelMenuModule ],\n    templateUrl: \"./left-menu.component.html\",\n    styles: [],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class LeftMenuComponent {\n    @Input() items:any = [];\n    @Input() className = \"\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-panelMenu [model]=\"items\" [styleClass]=\"className\">\n  <ng-template pTemplate=\"item\" let-item>\n    <a pRipple class=\"flex align-items-center px-3 py-2 cursor-pointer\">\n      <i [class]=\"item.icon\"></i>\n      <span class=\"ml-2\">\n        {{ item.label }}\n      </span>\n      <span\n          *ngIf=\"item.shortcut\"\n          class=\"ml-auto border-1 surface-border border-round surface-100 text-xs p-1\"\n      >\n        {{ item.shortcut }}\n      </span>\n    </a>\n  </ng-template>\n</p-panelMenu>\n"
        },
        {
            "name": "NumoTesterComponent",
            "id": "component-NumoTesterComponent-9e784ea9eea4dc1290bd70975197204dc02d178817aa88bd295ece6e19ec9829fdd50e437750bb874d4241cbd76055b1a589f931a4902a8fcbe2cf10753afa9a",
            "file": "projects/ngx-ui-web/src/lib/tester.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-tester",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"text-red-600 bg-black object-fill\">\n    Numo test component is working just fine, and it's\n    {{ lilText }}!\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "lilText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: \"numo-tester\",\n    standalone: true,\n    template: `\n        <div class=\"text-red-600 bg-black object-fill\">\n            Numo test component is working just fine, and it's\n            {{ lilText }}!\n        </div>\n    `,\n})\nexport class NumoTesterComponent {\n    @Input() lilText: string = \"\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-f7f465715b303da3b5464745f75d7d0236b0ba31c9d2ab995d1e5dc2fad67cbeb67bac3e4f0ae2e9ac8e0431e0bfb58e4e1585f03bcaf23e050a3b3a94decc65",
            "file": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "p-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<p-toast></p-toast>\n<p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MessageService } from \"primeng/api\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ToastModule } from \"primeng/toast\";\n\n@Component({\n    selector: \"p-toast-wrapper\",\n    imports: [ ToastModule, FormsModule, ReactiveFormsModule, ButtonModule, BrowserAnimationsModule ],\n    template: `\n    <p-toast></p-toast>\n    <p-button (onClick)=\"show()\" label=\"Show\"></p-button>\n  `,\n    providers: [ MessageService ]\n})\nexport class ToastComponent {\n    constructor(private messageService: MessageService) {\n    }\n\n    show() {\n        this.messageService.add({ severity: \"success\", summary: \"Success\", detail: \"Message Content\" });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        label: \"Mans Numo\",\n        expanded: false,\n        items: [],\n    },\n    {\n        label: \"Vadība\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                icon: \"pi pi-objects-column\",\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n                icon: \"pi pi-book\",\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \" Pro Numo\",\n        expanded: true,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                icon: \"pi pi-objects-column\",\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n                icon: \"pi pi-book\",\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n                icon: \"pi pi-money-bill\",\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n                icon: \"pi pi-building-columns\",\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n                icon: \"pi pi-warehouse\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                icon: \"pi pi-directions\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n                icon: \"pi pi-briefcase\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n                icon: \"pi pi-cloud-upload\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n                icon: \"pi pi-wallet\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n                icon: \"pi pi-ticket\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n                icon: \"pi pi-warehouse\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n                icon: \"pi pi-credit-card\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n                icon: \"pi pi-calendar\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Avansa norēkini\",\n                icon: \"pi pi-receipt\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Komandējumi\",\n                icon: \"pi pi-directions-alt\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\n                icon: \"pi pi-money-bill\",\n                items: [],\n            },\n            {\n                label: \"Vadības grāmatvedība\",\n                icon: \"pi pi-briefcase\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Līgumi\",\n                icon: \"pi pi-chart-bar\",\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n]"
            },
            {
                "name": "UserMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        label: \"Profile\",\n        route: \"\",\n    },\n    {\n        label: \"Settings\",\n        route: \"\",\n    },\n    {\n        label: \"Logout\",\n        route: \"\",\n    },\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        label: \"Mans Numo\",\n        expanded: false,\n        items: [],\n    },\n    {\n        label: \"Vadība\",\n        expanded: false,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                icon: \"pi pi-objects-column\",\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n                icon: \"pi pi-book\",\n                route: \"\",\n            },\n        ],\n    },\n    {\n        label: \" Pro Numo\",\n        expanded: true,\n        items: [\n            {\n                label: \"Darbvirsma\",\n                items: [],\n                icon: \"pi pi-objects-column\",\n                route: \"\",\n            },\n            {\n                label: \"Virsgrāmata\",\n                items: [],\n                icon: \"pi pi-book\",\n                route: \"\",\n            },\n            {\n                label: \"Kase\",\n                items: [],\n                icon: \"pi pi-money-bill\",\n                route: \"\",\n            },\n            {\n                label: \"Banka\",\n                items: [],\n                icon: \"pi pi-building-columns\",\n                route: \"\",\n            },\n            {\n                label: \"Noliktava\",\n                icon: \"pi pi-warehouse\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"LoĢistika\",\n                icon: \"pi pi-directions\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Kases sistēmas\",\n                icon: \"pi pi-briefcase\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Realizācija\",\n                icon: \"pi pi-cloud-upload\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Debitoru novērtēšana\",\n                icon: \"pi pi-wallet\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Pamatlīdzekļi\",\n                icon: \"pi pi-ticket\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"PL un inventāra inventarizācija\",\n                icon: \"pi pi-warehouse\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Algas\",\n                icon: \"pi pi-credit-card\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Darba laika plānošana\",\n                icon: \"pi pi-calendar\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Avansa norēkini\",\n                icon: \"pi pi-receipt\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Komandējumi\",\n                icon: \"pi pi-directions-alt\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Nākamo periodu ieņēmumi/izdevumi\",\n                icon: \"pi pi-money-bill\",\n                items: [],\n            },\n            {\n                label: \"Vadības grāmatvedība\",\n                icon: \"pi pi-briefcase\",\n                items: [],\n                route: \"\",\n            },\n            {\n                label: \"Līgumi\",\n                icon: \"pi pi-chart-bar\",\n                items: [],\n                route: \"\",\n            },\n        ],\n    },\n]"
                },
                {
                    "name": "UserMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        label: \"Profile\",\n        route: \"\",\n    },\n    {\n        label: \"Settings\",\n        route: \"\",\n    },\n    {\n        label: \"Logout\",\n        route: \"\",\n    },\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumoTesterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/lib/tester.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TesterService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/left-menu/left-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/layouts/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-ui-web/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}